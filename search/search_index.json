{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! This documentation currently has documentation for the following exploits: Synapse Elysian ProtoSmasher ProtoSmasher documentation was added by Nexure and modified by me so a huge thanks goes to him! Last updated: October 22nd, 2019 If you want more documentation added, make a pull request!","title":"Welcome!"},{"location":"#welcome","text":"This documentation currently has documentation for the following exploits: Synapse Elysian ProtoSmasher ProtoSmasher documentation was added by Nexure and modified by me so a huge thanks goes to him! Last updated: October 22nd, 2019 If you want more documentation added, make a pull request!","title":"Welcome!"},{"location":"Elysian/base-environment/","text":"Base Environment getrawmetatable table getrawmetatable ( variant < table , userdata > obj ) Returns the metatable from a table or userdata, even if it is locked. setrawmetatable boolean setrawmetatable ( variant < table , userdata > obj , table val ) Sets the metatable of a table or userdata, even if it is locked. isreadonly boolean isreadonly ( table val ) Returns true if the table is read-only. printconsole boolean printconsole ( string val [, number r , number g , number b ]) Prints val to Elysian\u2019s console with color r, g, b . Default color is 0, 0, 200 . printdebug boolean printdebug ( string val ) Prints val to the console (View->Console->Toggle) getobjects string getobjects ( content ) Internal function used by DataModel::GetObjects (see init.lua) readfile string readfile ( string filename ) Returns the contents of a file in the workspace folder loadfile function loadfile ( string filename ) Loads a file from the workspace folder. Returns nil and an error on error. Similar to executing loadstring(readfile(filename)) . getgenv table getgenv () Returns the global environment for Elysian. getrenv table getrenv () Returns the global environment for game scripts. Clipboard.set boolean Clipboard . set ( string data ) Sets the contents of the clipboard to data . mouse1press void mouse1press ([ number x , number y ]) Presses the left mouse button. mouse1release void mouse1release ([ number x , number y ]) Releases the left mouse button. mouse1click void mouse1click ([ number delay , number x , number y ]) Clicks the left mouse button with an optional delay in between press and release. Delay default is ~0.03 seconds. mouse2press void mouse2press ([ number x , number y ]) Presses the right mouse button. mouse2release void mouse2release ([ number x , number y ]) \\ Releases the right mouse button. mouse2click void mouse2click ([ number delay , number x , number y ]) Clicks the right mouse button with an optional delay in between press and release. Delay default is ~0.03 seconds. keypress void keypress ( KeyCode key ) Presses a key. If a number is passed for key , Elysian will interpret it as a virtual key code and attempt to convert it to a KeyCode for compatibility with scripts created for older versions of Elysian. keyrelease void keyrelease ( KeyCode key ) Releases a key. If a number is passed for key, Elysian will interpret it as a virtual key code. See keypress . mousemove void mousemove ( number x , number y [, number dx , number dy ]) Moves the cursor to a location inside Roblox\u2019s window. dx and dy are optional mouse delta parameters to be sent to Roblox. If not provided, they are equivalent to x - current_mouse_position.X and y - current_mouse_position.Y respectively. mousemoverel void mousemoverel ( number dx , number dy ) Moves the cursor relatively. mousescroll void mousescroll ( boolean forward [, number x , number y ]) Scrolls the mouse. For compatibility with scripts created for older versions of Elysian, a number can be passed to forward where a positive number scrolls the mouse up, a negative number scrolls the mouse down, and one scroll \u201cclick\u201d is equal to 120. writefile boolean writefile ( string filename , string data [, boolean binary ]) Note This will fail if attempting to access an outside directory. appendfile boolean appendfile ( string filename , string data [, boolean binary ]) Appends data to a file in the workspace folder. Returns true if successful. Note This will fail if attempting to access an outside directory. saveinstance void saveinstance ( Instance instance , string name [, table options ]) Saves an instance to a file in the workspace folder which can be later opened in Roblox Studio. Possible options (and their default values) can be seen below: local defaultSettings = { DecompileMode = 0 , -- 0 = don't decompile scripts, 1 = luadec, 2 = unluac NilInstances = false , -- save nil instances RemovePlayers = true , -- ignore players SavePlayerDescendants = false , DecompileTimeout = 10 , -- unluac only UnluacMaxThreads = 5 , -- the max number of java processes that should be running at one time (the higher this value is the faster the decompilation process) DecompileIgnore = { \"StarterPlayer\" , \"Chat\" } -- scripts inside these services are saved but not decompiled } saveplace void saveplace ( string name [, table options ]) Equivalent to saveinstance(game, name, options) decompile string decompile ( variant < Instance , function > script [, string option ]) Attempts to decompile script and returns the result. If option is provided and equal to \u201cdump\u201d, lua bytecode will be returned (similar to string.dump). It should be noted that due to Roblox\u2019s changes to Lua\u2019s VM and parser this bytecode is not reliable to use with unmodified decompilers. Returns nil and an error message on error. decompile boolean decompile ( variant < Instance , function > script , \u201c unluac \u201d , function callback ( string result , string error ), number timeout = 5 ) If option is provided and equal to \u201cunluac\u201d, decompile decompiles with unluac. If invalid parameters are passed, nil and an error is returned. If not, decompile returns with true and a (Windows) thread is created that spawns a java process and waits for its output. Once the process ends, the callback is called with the result. If Java is not installed or another error occurs, the callback is called with nil and the error. WARNING: A new java process is created every time this function is called. Calling decompile too quickly or in excessive amounts may cause some java processes to hang or exhaust your computer of resources. checkcaller boolean checkcaller () Returns true if the function calling the function calling checkcaller is an Elysian function. setfflag boolean setfflag ( string fflag , string value ) Sets a FFlag\u2019s value. Returns true if the flag was set succesfully or false if the flag doesn\u2019t exist. getreg table getreg () Returns Lua\u2019s registry (LUA_REGISTRYINDEX) getnilinstances table getnilinstances () Returns a list of nil instances. elysianexecute void elysianexecute ( string script [, Instance localscript ]) Equivalent to executing a script through Elysian\u2019s interface (pressing the execute button, etc). If localscript is provided, the script will be binded/linked to that instance. If not present, a new LocalScript will be created. newcclosure function newcclosure ( function f ) Disguises Lua function f as a C function. It is seen as a C function by other scripts and any errors thrown inside f are viewed as coming from the C function, not f (in other words, the existence of f can not be detected by viewing the error message, stack trace, or etc.). f is allowed to yield ( e.g. wait() ) but will resume outside of the function. replaceclosure function replaceclosure ( function target , function replacement ) Replaces a function with another function and returns a clone of the original. Once a function is replaced it cannot be replaced with any other function except for its clone/original. For a better understanding, see this code. It should be noted that Lua doesn\u2019t like people modifying internal structures and improper or extensive use of this function may cause unexpected crashes or other issues. restoreclosure boolean restoreclosure ( function target ) Restores a closure that has been overwritten with replaceclosure . Returns false if the function has not been replaced. bit library functions : bit . tobit , bit . tohex , bit . bnot , bit . band , bit . bor , bit . bxor , bit . lshift , bit . rshift , bit . arshift , bit . rol , bit . ror Attempts to replicate LuaJIT\u2019s bit library . Superseded by Roblox's bit32 library. getallthreads table getallthreads () Returns an array of all existing Lua threads. getthreadobject Instance getthreadobject ([ thread t ]) Returns the script associated with a Lua thread. If t is not provided, the current thread is used. gettenv table gettenv ([ thread t ]) Returns a thread\u2019s environment. If t is not provided, the current thread is used. getsenv table getsenv ( Instance script ) Searches for a thread associated with script and returns its environment (see init.lua for implementation). getlocals table getlocals ( number level ) Returns a Lua function\u2019s local variables. The level parameter represents a function on the callstack, where 1 is the function calling getlocals, 2 is the function calling that function, and so on. The level provided cannot point to an Elysian or C function. In Luau-enabled games , getlocals returns the function\u2019s stack as an array instead of a dictionary of local names to local variables. setlocal boolean setlocal ( number level , string i , variant v ) Sets local variable i to value v in the function pointed to by level (see getlocals ). Like getlocals, the function cannot be an Elysian or C function. Returns true if the variable was set successfully. In Luau-enabled games , setlocal requires an integer index for i instead of a string. getupvals table getupvals ( variant < number , function > f ) Returns a Lua function\u2019s upvalues. If a number is passed for f, it is interpreted as a level (see getlocals and setlocal ). The function cannot be an Elysian or C function. In Luau-enabled games , getupvals returns the function\u2019s upvalues as an array instead of a dictionary of upvalue names to upvalues. setupval boolean setupval ( variant < number , function > f , string i , variant v ) Sets upvalue i to value v in function f. If a number is passed for f, it is interpreted as a level (see getlocals and setlocal ). The function cannot be an Elysian or C function. Returns true if the upvalue was set successfully. In Luau-enabled games , setupval requires an integer index for i instead of a string. getconsts table getconsts ( variant < number , function > f ) Returns a Lua function\u2019s constants. If a number is passed for f, it is interpreted as a level. setconst void setconst ( variant < number , function > f , number i , variant v ) Sets constant number i to value v in function f. If a number is passed for f , it is interpreted as a level. getgc table getgc ([ boolean nomt ]) Returns an array of all existing allocated objects in Lua. This includes strings, functions, threads, userdata, and more across all Roblox and Elysian scripts. Unless nomt is set, the returned table has a metatable with __mode set to \u201cv\u201d . islclosure boolean islclosure ( function f ) Returns true if f is a Lua function. gethui Instance gethui () Returns a hidden renderable container separate from CoreGui, PlayerGui, and et cetera. ScreenGuis and Messages parented to this container will render on top of CoreGui. Although parented to game , game scripts cannot enumerate Game\u2019s children to find this container or use functions such as FindFirstChild to find the container or any of its descendants. Objects added to and removed from the container will not fire DescendantAdded or DescendantRemoving signals on game. getbspval string getbspval ( Instance object , string property [, boolean base64 ]) Reads a BinaryString property\u2019s value. Useful for reading conventionally unreadable BinaryString properties such as Terrain.SmoothGrid, PartOperation.PhysicsData, BinaryStringValue .Value, and so on. getnspval variant getnspval ( Instance object , string property ) Returns a property\u2019s value, even if it is unscriptable. getunionassetid string getunionassetid ( Instance union ) Equivalent to getnspval(union, \"AssetId\") getconnections table getconnections ( RBXScriptSignal signal ) Returns a list of Lua and engine connections to signal. isluau boolean isluau () Returns true if the game is running on Roblox\u2019s new Lua implementation, Luau . getnamecallmethod string getnamecallmethod () Returns the method parameter in the context of a __namecall metamethod. Only applies to Luau-enabled games . See init.lua for example usage. Luau Luau is a custom, speedy Lua implementation created by Roblox. It was first spotted in early April of 2019 before being publicly announced by Roblox in late June. Luau does not change Lua\u2019s syntax or behavior but implements a much faster runtime using optimizations in the parser and virtual machine. Elysian Support (v3.3.0+) & Developer Notes Elysian\u2019s Luau support includes most, but not all, of Luau\u2019s available optimizations. Decompiling Luau scripts is not yet possible due to Luau\u2019s completely different bytecode and instruction set. A decompiler will be coming soon, courtesy of the Synapse X team <3. Luau bytecode does not include local or upvalue name information. As a result, getlocals , setlocal , getupvals , and setupval now require indices (integers) instead of names (strings) in Luau-enabled games. One Luau optimization removes the method parameter of the __namecall metamethod. In Luau-enabled games, this parameter must now be obtained via the [getnamecallmethod]](../base-environment/#getnamecallmethod) function. RBXScriptSignal Extensions Properties boolean Scriptable [ readonly ] Determines whether or not a signal is scriptable. Calling Connect or Wait on non-scriptable signals has no effect. Functions RBXScriptConnection RBXScriptSignal : Connect ( function func ) In Elysian, Connect works as normal but can also register connections to non-scriptable signals. A list of non-scriptable/internal signals will appear here in the future. table RBXScriptSignal : GetConnections () Equivalent to getconnections(signal) RBXScriptConnection Extensions Properties boolean LuaConnection [ readonly ] Determines whether or not the connection is attached to a Lua function. boolean Enabled Determines whether or not the connection is enabled. Disabled connections will not fire. Both Lua and engine connections can be disabled. Anti-AFK can now by achieved with a few lines of code: for i , v in pairs ( game : GetService \"Players\" . LocalPlayer . Idled : GetConnections ()) do if not v . LuaConnection then v . Enabled = false end end This works by disabling a connection created by Roblox\u2019s engine responsible for kicking the client when the user has been idle for more than 20 minutes. Functions function RBXScriptConnection : GetFunction () Returns a connection\u2019s associated Lua function or nil if the connection is not a Lua connection or the function belongs to another Lua instance (corescript state, etc.) void RBXScriptConnection : GetThread () Returns a connection\u2019s associated Lua thread or nil if the connection is not a Lua connection or the thread belongs to another Lua instance (corescript state, etc.)","title":"Base Environment"},{"location":"Elysian/base-environment/#base-environment","text":"","title":"Base Environment"},{"location":"Elysian/base-environment/#getrawmetatable","text":"table getrawmetatable ( variant < table , userdata > obj ) Returns the metatable from a table or userdata, even if it is locked.","title":"getrawmetatable"},{"location":"Elysian/base-environment/#setrawmetatable","text":"boolean setrawmetatable ( variant < table , userdata > obj , table val ) Sets the metatable of a table or userdata, even if it is locked.","title":"setrawmetatable"},{"location":"Elysian/base-environment/#isreadonly","text":"boolean isreadonly ( table val ) Returns true if the table is read-only.","title":"isreadonly"},{"location":"Elysian/base-environment/#printconsole","text":"boolean printconsole ( string val [, number r , number g , number b ]) Prints val to Elysian\u2019s console with color r, g, b . Default color is 0, 0, 200 .","title":"printconsole"},{"location":"Elysian/base-environment/#printdebug","text":"boolean printdebug ( string val ) Prints val to the console (View->Console->Toggle)","title":"printdebug"},{"location":"Elysian/base-environment/#getobjects","text":"string getobjects ( content ) Internal function used by DataModel::GetObjects (see init.lua)","title":"getobjects"},{"location":"Elysian/base-environment/#readfile","text":"string readfile ( string filename ) Returns the contents of a file in the workspace folder","title":"readfile"},{"location":"Elysian/base-environment/#loadfile","text":"function loadfile ( string filename ) Loads a file from the workspace folder. Returns nil and an error on error. Similar to executing loadstring(readfile(filename)) .","title":"loadfile"},{"location":"Elysian/base-environment/#getgenv","text":"table getgenv () Returns the global environment for Elysian.","title":"getgenv"},{"location":"Elysian/base-environment/#getrenv","text":"table getrenv () Returns the global environment for game scripts.","title":"getrenv"},{"location":"Elysian/base-environment/#clipboardset","text":"boolean Clipboard . set ( string data ) Sets the contents of the clipboard to data .","title":"Clipboard.set"},{"location":"Elysian/base-environment/#mouse1press","text":"void mouse1press ([ number x , number y ]) Presses the left mouse button.","title":"mouse1press"},{"location":"Elysian/base-environment/#mouse1release","text":"void mouse1release ([ number x , number y ]) Releases the left mouse button.","title":"mouse1release"},{"location":"Elysian/base-environment/#mouse1click","text":"void mouse1click ([ number delay , number x , number y ]) Clicks the left mouse button with an optional delay in between press and release. Delay default is ~0.03 seconds.","title":"mouse1click"},{"location":"Elysian/base-environment/#mouse2press","text":"void mouse2press ([ number x , number y ]) Presses the right mouse button.","title":"mouse2press"},{"location":"Elysian/base-environment/#mouse2release","text":"void mouse2release ([ number x , number y ]) \\ Releases the right mouse button.","title":"mouse2release"},{"location":"Elysian/base-environment/#mouse2click","text":"void mouse2click ([ number delay , number x , number y ]) Clicks the right mouse button with an optional delay in between press and release. Delay default is ~0.03 seconds.","title":"mouse2click"},{"location":"Elysian/base-environment/#keypress","text":"void keypress ( KeyCode key ) Presses a key. If a number is passed for key , Elysian will interpret it as a virtual key code and attempt to convert it to a KeyCode for compatibility with scripts created for older versions of Elysian.","title":"keypress"},{"location":"Elysian/base-environment/#keyrelease","text":"void keyrelease ( KeyCode key ) Releases a key. If a number is passed for key, Elysian will interpret it as a virtual key code. See keypress .","title":"keyrelease"},{"location":"Elysian/base-environment/#mousemove","text":"void mousemove ( number x , number y [, number dx , number dy ]) Moves the cursor to a location inside Roblox\u2019s window. dx and dy are optional mouse delta parameters to be sent to Roblox. If not provided, they are equivalent to x - current_mouse_position.X and y - current_mouse_position.Y respectively.","title":"mousemove"},{"location":"Elysian/base-environment/#mousemoverel","text":"void mousemoverel ( number dx , number dy ) Moves the cursor relatively.","title":"mousemoverel"},{"location":"Elysian/base-environment/#mousescroll","text":"void mousescroll ( boolean forward [, number x , number y ]) Scrolls the mouse. For compatibility with scripts created for older versions of Elysian, a number can be passed to forward where a positive number scrolls the mouse up, a negative number scrolls the mouse down, and one scroll \u201cclick\u201d is equal to 120.","title":"mousescroll"},{"location":"Elysian/base-environment/#writefile","text":"boolean writefile ( string filename , string data [, boolean binary ]) Note This will fail if attempting to access an outside directory.","title":"writefile"},{"location":"Elysian/base-environment/#appendfile","text":"boolean appendfile ( string filename , string data [, boolean binary ]) Appends data to a file in the workspace folder. Returns true if successful. Note This will fail if attempting to access an outside directory.","title":"appendfile"},{"location":"Elysian/base-environment/#saveinstance","text":"void saveinstance ( Instance instance , string name [, table options ]) Saves an instance to a file in the workspace folder which can be later opened in Roblox Studio. Possible options (and their default values) can be seen below: local defaultSettings = { DecompileMode = 0 , -- 0 = don't decompile scripts, 1 = luadec, 2 = unluac NilInstances = false , -- save nil instances RemovePlayers = true , -- ignore players SavePlayerDescendants = false , DecompileTimeout = 10 , -- unluac only UnluacMaxThreads = 5 , -- the max number of java processes that should be running at one time (the higher this value is the faster the decompilation process) DecompileIgnore = { \"StarterPlayer\" , \"Chat\" } -- scripts inside these services are saved but not decompiled }","title":"saveinstance"},{"location":"Elysian/base-environment/#saveplace","text":"void saveplace ( string name [, table options ]) Equivalent to saveinstance(game, name, options)","title":"saveplace"},{"location":"Elysian/base-environment/#decompile","text":"string decompile ( variant < Instance , function > script [, string option ]) Attempts to decompile script and returns the result. If option is provided and equal to \u201cdump\u201d, lua bytecode will be returned (similar to string.dump). It should be noted that due to Roblox\u2019s changes to Lua\u2019s VM and parser this bytecode is not reliable to use with unmodified decompilers. Returns nil and an error message on error.","title":"decompile"},{"location":"Elysian/base-environment/#decompile_1","text":"boolean decompile ( variant < Instance , function > script , \u201c unluac \u201d , function callback ( string result , string error ), number timeout = 5 ) If option is provided and equal to \u201cunluac\u201d, decompile decompiles with unluac. If invalid parameters are passed, nil and an error is returned. If not, decompile returns with true and a (Windows) thread is created that spawns a java process and waits for its output. Once the process ends, the callback is called with the result. If Java is not installed or another error occurs, the callback is called with nil and the error. WARNING: A new java process is created every time this function is called. Calling decompile too quickly or in excessive amounts may cause some java processes to hang or exhaust your computer of resources.","title":"decompile"},{"location":"Elysian/base-environment/#checkcaller","text":"boolean checkcaller () Returns true if the function calling the function calling checkcaller is an Elysian function.","title":"checkcaller"},{"location":"Elysian/base-environment/#setfflag","text":"boolean setfflag ( string fflag , string value ) Sets a FFlag\u2019s value. Returns true if the flag was set succesfully or false if the flag doesn\u2019t exist.","title":"setfflag"},{"location":"Elysian/base-environment/#getreg","text":"table getreg () Returns Lua\u2019s registry (LUA_REGISTRYINDEX)","title":"getreg"},{"location":"Elysian/base-environment/#getnilinstances","text":"table getnilinstances () Returns a list of nil instances.","title":"getnilinstances"},{"location":"Elysian/base-environment/#elysianexecute","text":"void elysianexecute ( string script [, Instance localscript ]) Equivalent to executing a script through Elysian\u2019s interface (pressing the execute button, etc). If localscript is provided, the script will be binded/linked to that instance. If not present, a new LocalScript will be created.","title":"elysianexecute"},{"location":"Elysian/base-environment/#newcclosure","text":"function newcclosure ( function f ) Disguises Lua function f as a C function. It is seen as a C function by other scripts and any errors thrown inside f are viewed as coming from the C function, not f (in other words, the existence of f can not be detected by viewing the error message, stack trace, or etc.). f is allowed to yield ( e.g. wait() ) but will resume outside of the function.","title":"newcclosure"},{"location":"Elysian/base-environment/#replaceclosure","text":"function replaceclosure ( function target , function replacement ) Replaces a function with another function and returns a clone of the original. Once a function is replaced it cannot be replaced with any other function except for its clone/original. For a better understanding, see this code. It should be noted that Lua doesn\u2019t like people modifying internal structures and improper or extensive use of this function may cause unexpected crashes or other issues.","title":"replaceclosure"},{"location":"Elysian/base-environment/#restoreclosure","text":"boolean restoreclosure ( function target ) Restores a closure that has been overwritten with replaceclosure . Returns false if the function has not been replaced.","title":"restoreclosure"},{"location":"Elysian/base-environment/#bit-library","text":"functions : bit . tobit , bit . tohex , bit . bnot , bit . band , bit . bor , bit . bxor , bit . lshift , bit . rshift , bit . arshift , bit . rol , bit . ror Attempts to replicate LuaJIT\u2019s bit library . Superseded by Roblox's bit32 library.","title":"bit library"},{"location":"Elysian/base-environment/#getallthreads","text":"table getallthreads () Returns an array of all existing Lua threads.","title":"getallthreads"},{"location":"Elysian/base-environment/#getthreadobject","text":"Instance getthreadobject ([ thread t ]) Returns the script associated with a Lua thread. If t is not provided, the current thread is used.","title":"getthreadobject"},{"location":"Elysian/base-environment/#gettenv","text":"table gettenv ([ thread t ]) Returns a thread\u2019s environment. If t is not provided, the current thread is used.","title":"gettenv"},{"location":"Elysian/base-environment/#getsenv","text":"table getsenv ( Instance script ) Searches for a thread associated with script and returns its environment (see init.lua for implementation).","title":"getsenv"},{"location":"Elysian/base-environment/#getlocals","text":"table getlocals ( number level ) Returns a Lua function\u2019s local variables. The level parameter represents a function on the callstack, where 1 is the function calling getlocals, 2 is the function calling that function, and so on. The level provided cannot point to an Elysian or C function. In Luau-enabled games , getlocals returns the function\u2019s stack as an array instead of a dictionary of local names to local variables.","title":"getlocals"},{"location":"Elysian/base-environment/#setlocal","text":"boolean setlocal ( number level , string i , variant v ) Sets local variable i to value v in the function pointed to by level (see getlocals ). Like getlocals, the function cannot be an Elysian or C function. Returns true if the variable was set successfully. In Luau-enabled games , setlocal requires an integer index for i instead of a string.","title":"setlocal"},{"location":"Elysian/base-environment/#getupvals","text":"table getupvals ( variant < number , function > f ) Returns a Lua function\u2019s upvalues. If a number is passed for f, it is interpreted as a level (see getlocals and setlocal ). The function cannot be an Elysian or C function. In Luau-enabled games , getupvals returns the function\u2019s upvalues as an array instead of a dictionary of upvalue names to upvalues.","title":"getupvals"},{"location":"Elysian/base-environment/#setupval","text":"boolean setupval ( variant < number , function > f , string i , variant v ) Sets upvalue i to value v in function f. If a number is passed for f, it is interpreted as a level (see getlocals and setlocal ). The function cannot be an Elysian or C function. Returns true if the upvalue was set successfully. In Luau-enabled games , setupval requires an integer index for i instead of a string.","title":"setupval"},{"location":"Elysian/base-environment/#getconsts","text":"table getconsts ( variant < number , function > f ) Returns a Lua function\u2019s constants. If a number is passed for f, it is interpreted as a level.","title":"getconsts"},{"location":"Elysian/base-environment/#setconst","text":"void setconst ( variant < number , function > f , number i , variant v ) Sets constant number i to value v in function f. If a number is passed for f , it is interpreted as a level.","title":"setconst"},{"location":"Elysian/base-environment/#getgc","text":"table getgc ([ boolean nomt ]) Returns an array of all existing allocated objects in Lua. This includes strings, functions, threads, userdata, and more across all Roblox and Elysian scripts. Unless nomt is set, the returned table has a metatable with __mode set to \u201cv\u201d .","title":"getgc"},{"location":"Elysian/base-environment/#islclosure","text":"boolean islclosure ( function f ) Returns true if f is a Lua function.","title":"islclosure"},{"location":"Elysian/base-environment/#gethui","text":"Instance gethui () Returns a hidden renderable container separate from CoreGui, PlayerGui, and et cetera. ScreenGuis and Messages parented to this container will render on top of CoreGui. Although parented to game , game scripts cannot enumerate Game\u2019s children to find this container or use functions such as FindFirstChild to find the container or any of its descendants. Objects added to and removed from the container will not fire DescendantAdded or DescendantRemoving signals on game.","title":"gethui"},{"location":"Elysian/base-environment/#getbspval","text":"string getbspval ( Instance object , string property [, boolean base64 ]) Reads a BinaryString property\u2019s value. Useful for reading conventionally unreadable BinaryString properties such as Terrain.SmoothGrid, PartOperation.PhysicsData, BinaryStringValue .Value, and so on.","title":"getbspval"},{"location":"Elysian/base-environment/#getnspval","text":"variant getnspval ( Instance object , string property ) Returns a property\u2019s value, even if it is unscriptable.","title":"getnspval"},{"location":"Elysian/base-environment/#getunionassetid","text":"string getunionassetid ( Instance union ) Equivalent to getnspval(union, \"AssetId\")","title":"getunionassetid"},{"location":"Elysian/base-environment/#getconnections","text":"table getconnections ( RBXScriptSignal signal ) Returns a list of Lua and engine connections to signal.","title":"getconnections"},{"location":"Elysian/base-environment/#isluau","text":"boolean isluau () Returns true if the game is running on Roblox\u2019s new Lua implementation, Luau .","title":"isluau"},{"location":"Elysian/base-environment/#getnamecallmethod","text":"string getnamecallmethod () Returns the method parameter in the context of a __namecall metamethod. Only applies to Luau-enabled games . See init.lua for example usage.","title":"getnamecallmethod"},{"location":"Elysian/base-environment/#luau","text":"Luau is a custom, speedy Lua implementation created by Roblox. It was first spotted in early April of 2019 before being publicly announced by Roblox in late June. Luau does not change Lua\u2019s syntax or behavior but implements a much faster runtime using optimizations in the parser and virtual machine.","title":"Luau"},{"location":"Elysian/base-environment/#elysian-support-v330-developer-notes","text":"Elysian\u2019s Luau support includes most, but not all, of Luau\u2019s available optimizations. Decompiling Luau scripts is not yet possible due to Luau\u2019s completely different bytecode and instruction set. A decompiler will be coming soon, courtesy of the Synapse X team <3. Luau bytecode does not include local or upvalue name information. As a result, getlocals , setlocal , getupvals , and setupval now require indices (integers) instead of names (strings) in Luau-enabled games. One Luau optimization removes the method parameter of the __namecall metamethod. In Luau-enabled games, this parameter must now be obtained via the [getnamecallmethod]](../base-environment/#getnamecallmethod) function.","title":"Elysian Support (v3.3.0+) &amp; Developer Notes"},{"location":"Elysian/base-environment/#rbxscriptsignal-extensions","text":"","title":"RBXScriptSignal Extensions"},{"location":"Elysian/base-environment/#properties","text":"boolean Scriptable [ readonly ] Determines whether or not a signal is scriptable. Calling Connect or Wait on non-scriptable signals has no effect.","title":"Properties"},{"location":"Elysian/base-environment/#functions","text":"RBXScriptConnection RBXScriptSignal : Connect ( function func ) In Elysian, Connect works as normal but can also register connections to non-scriptable signals. A list of non-scriptable/internal signals will appear here in the future. table RBXScriptSignal : GetConnections () Equivalent to getconnections(signal)","title":"Functions"},{"location":"Elysian/base-environment/#rbxscriptconnection-extensions","text":"","title":"RBXScriptConnection Extensions"},{"location":"Elysian/base-environment/#properties_1","text":"boolean LuaConnection [ readonly ] Determines whether or not the connection is attached to a Lua function. boolean Enabled Determines whether or not the connection is enabled. Disabled connections will not fire. Both Lua and engine connections can be disabled. Anti-AFK can now by achieved with a few lines of code: for i , v in pairs ( game : GetService \"Players\" . LocalPlayer . Idled : GetConnections ()) do if not v . LuaConnection then v . Enabled = false end end This works by disabling a connection created by Roblox\u2019s engine responsible for kicking the client when the user has been idle for more than 20 minutes.","title":"Properties"},{"location":"Elysian/base-environment/#functions_1","text":"function RBXScriptConnection : GetFunction () Returns a connection\u2019s associated Lua function or nil if the connection is not a Lua connection or the function belongs to another Lua instance (corescript state, etc.) void RBXScriptConnection : GetThread () Returns a connection\u2019s associated Lua thread or nil if the connection is not a Lua connection or the thread belongs to another Lua instance (corescript state, etc.)","title":"Functions"},{"location":"ProtoSmasher/base-environment/","text":"Base Environment getgenv table getgenv () Returns the global environment table for ProtoSmasher. getrenv table getrenv () Returns the table of all ROBLOX globals. getrawmetatable table getrawmetatable ( variant < Userdata , string , table > object ) Returns the metatable of the passed object, ignores the __metatable metafield. Object could be locked, check is is_readonly, and is_writeable, or change with make_readonly and make_writable getsenv table getsenv ( Object < LocalScript > script ) Returns the global environment of the given script. getmenv table getmenv ( Object < ModuleScript > script ) Returns the global environment of the given ModuleScript. getscriptenvs table getscriptenvs ( < none > ) Returns a table of all scripts and their global environments. (key = script, value = environment) loadstring variant < function , ( nil , string ) > loadstring ( string sourceCode , string chunkName = \"@(Random String)\" ) Converts plain lua source code into a function. Returns nil and a string on error. Will follow the set execution method. loadfile function loadfile ( string filePath ) Returns a function from the file, the equivalent of \"loadstring(readfile(filePath))\", except more efficient. Will follow the set execution method. dofile function dofile ( string filePath ) Executes the lua source code from the file, the equivalent of \"loadstring(readfile(filePath))()\", Will follow the set execution method. make_writeable void make_writeable ( table tbl ) Changes the readonly flag of a table. make_readonly void make_readonly ( table tbl ) Changes the readonly flag of a table. is_writeable bool is_writeable ( table tbl ) Returns weather or not the table is writeable. is_readonly bool is_readonly ( table tbl ) Returns weather or not the table is read only. is_protosmasher_caller boolean is_protosmasher_caller ( < none > ) This checks if the current caller is a protosmasher thread. (used internally for getobjects) is_protosmasher_closure boolean is_protosmasher_closure ( function f ) Returns a boolean based on whether or not the function was created by ProtoSmasher. getobjects Array < Object > getobjects ( Object < DataModel > dataModel , string ContentString ) Internal function used by ProtoSmasher for DataModel::GetObjects. get_nil_instances table < Object > get_nil_instances ( < none > ) Returns all nil parented instances from the localscript state. get_thread_context int get_thread_context ( < none > ) Returns the current context of the caller. dump_function string dump_function ( function f ) Returns the regular lua bytecode of the given function. get_script_function function get_script_function ( Object < ModuleScript , LocalScript > script ) Returns a function of the script (cannot be called but can be passed to dump_function). bytecode_to_lua string bytecode_to_lua ( string byteCode ) Used to convert lua 5.1 bytecode into lua sourcecode (requires unluac.jar in workspace and java be installed) writefile void writefile ( string filePath , string contentsToWrite , boolean isBinary = false ) Writes the contents of \"contentsToWrite\" to the provided file (sandboxed to workspace). readfile string readfile ( string pathToFile ) Returns the files contents (sandboxed to workspace). decompile string decompile ( variant < Object , function > obj , string optionalArg = nil ) Returns the decompiled source code of a script or function. (if you want bytecode put optionalArg as \"dumponly\") setclipboard void setclipboard ( string strToCopy ) Sets the clipboard text to the contents of strToCopy pebc_create string pebc_create ( function toEncrypt ) Returns ProtoSmasher Encrypted Bytecode (TM) of the given function (can only be used by people i select, otherwise it will just throw an error.) pebc_load function pebc_load ( string pebc ) Loads ProtoSmasher Encrypted Bytecode (TM) and returns it in a function form. saveinstance void saveinstance ( Object instanceToSave , string fileName , bool enableScriptDecompiling ) Converts the given instance into roblox's xml instance format and saves it to the saved under the given file name. When enableScriptDecompiling is enabled it will automatically decompile any modulescript or localscript it encounters. disconnect_all void disconnect_all ( RBXScriptSignal signal ) Disconnects all connections from a given signal. (should note this might not work for events on datamodel, same for get_signal_connections) unlock_modulescript void unlock_modulescript ( Object < ModuleScript > signal ) Unlocks a given ModuleScript so it can be required via ProtoSmasher (Used by require now) printoutput void printoutput ( string text , Color3 color = Color3 ( 1 , 1 , 1 ), bool newLine = true ) Prints the output of ProtoSmasher, with optional formatting. get_renderstep_list table get_renderstep_list ( < none > ) Return a table of everything thats connected to RenderStep via BindToRenderStepEarly. The table is as following: key 1 is the priority, key 2 is the name, key 3 is the function. setfflag bool setfflag ( string flag , string value ) Set's the value of an FFlag and returns whether it was successfully set or not. Click here to view most if not all FFlags for the client. DebuggerManager Object < DebuggerManager > DebuggerManager ( < none > ) Returns the object interface for ROBLOX's script debugger. You can view its documentation here get_calling_script Object < LocalScript , ModuleScript > get_calling_script ( int level ) Returns the script object from the specificed stack level. protect_function function protect_function ( function f ) Returns a proxy function that will aide in making the function undetectable via stack trace errors. Function must be a ProtoSmasher closure. is_protected_closure bool is_protected_closure ( function f ) Returns a boolean whether or not the function is protected. Will return false instead of erroring with C closures. get_loaded_modules table < Object > get_loaded_modules ( < none > ) Returns a table populated with all loaded ModuleScript's in the game. Automatically filters out CoreGui modules. detour_function function detour_function ( function f , function detour ) Detour's the given function to the passed detour function, meaning everytime the function is called, your function will be called instead. This replaces the function and therfore does not change the value of tostringing it. A clone of the original function will be returned. parse_url array < string , string > parse_url ( string url ) Returns a table populated with various information about the passed url. Current information: protocol, domain, port, resource, query get_script_bytecode string get_script_bytecode ( Object < ModuleScript , LocalScript > script ) Returns the given script's bytecode in regular lua format. This is similar to dump_function combined with get_script_function, but this is more efficient. get_hidden_gui Object get_hidden_gui ( < none > ) Returns a Instance you can use parent Gui's to. Anything in here will be undetectable from things like CoreGui checks and such. get_gc_objects array < Variant > get_gc_objects ( < none > ) Returns a table containing most of the objects that exist in the current lua state. click_detector void click_detector ( Object < ClickDetector > detector , float Distance ) Clicks a ClickDetector automatically when called. The distance argument must be less than the MaxActivationDistance property. is_l_closure bool is_l_closure ( function f ) Returns a boolean that indicates whether or not the function is a Lua Closure or a C Closure. compare_c_functions bool compare_c_functions ( function f1 , function f2 ) Returns a boolean that indicates whether or not the functions internally call the same C function. Will error if either function is not a C closure. appendfile void appendfile ( string filePath , string contentsToWrite , boolean isBinary = false ) Appends the contents of \"contentsToWrite\" to the end of the provided file (sandboxed to workspace).","title":"Base Environment"},{"location":"ProtoSmasher/base-environment/#base-environment","text":"","title":"Base Environment"},{"location":"ProtoSmasher/base-environment/#getgenv","text":"table getgenv () Returns the global environment table for ProtoSmasher.","title":"getgenv"},{"location":"ProtoSmasher/base-environment/#getrenv","text":"table getrenv () Returns the table of all ROBLOX globals.","title":"getrenv"},{"location":"ProtoSmasher/base-environment/#getrawmetatable","text":"table getrawmetatable ( variant < Userdata , string , table > object ) Returns the metatable of the passed object, ignores the __metatable metafield. Object could be locked, check is is_readonly, and is_writeable, or change with make_readonly and make_writable","title":"getrawmetatable"},{"location":"ProtoSmasher/base-environment/#getsenv","text":"table getsenv ( Object < LocalScript > script ) Returns the global environment of the given script.","title":"getsenv"},{"location":"ProtoSmasher/base-environment/#getmenv","text":"table getmenv ( Object < ModuleScript > script ) Returns the global environment of the given ModuleScript.","title":"getmenv"},{"location":"ProtoSmasher/base-environment/#getscriptenvs","text":"table getscriptenvs ( < none > ) Returns a table of all scripts and their global environments. (key = script, value = environment)","title":"getscriptenvs"},{"location":"ProtoSmasher/base-environment/#loadstring","text":"variant < function , ( nil , string ) > loadstring ( string sourceCode , string chunkName = \"@(Random String)\" ) Converts plain lua source code into a function. Returns nil and a string on error. Will follow the set execution method.","title":"loadstring"},{"location":"ProtoSmasher/base-environment/#loadfile","text":"function loadfile ( string filePath ) Returns a function from the file, the equivalent of \"loadstring(readfile(filePath))\", except more efficient. Will follow the set execution method.","title":"loadfile"},{"location":"ProtoSmasher/base-environment/#dofile","text":"function dofile ( string filePath ) Executes the lua source code from the file, the equivalent of \"loadstring(readfile(filePath))()\", Will follow the set execution method.","title":"dofile"},{"location":"ProtoSmasher/base-environment/#make_writeable","text":"void make_writeable ( table tbl ) Changes the readonly flag of a table.","title":"make_writeable"},{"location":"ProtoSmasher/base-environment/#make_readonly","text":"void make_readonly ( table tbl ) Changes the readonly flag of a table.","title":"make_readonly"},{"location":"ProtoSmasher/base-environment/#is_writeable","text":"bool is_writeable ( table tbl ) Returns weather or not the table is writeable.","title":"is_writeable"},{"location":"ProtoSmasher/base-environment/#is_readonly","text":"bool is_readonly ( table tbl ) Returns weather or not the table is read only.","title":"is_readonly"},{"location":"ProtoSmasher/base-environment/#is_protosmasher_caller","text":"boolean is_protosmasher_caller ( < none > ) This checks if the current caller is a protosmasher thread. (used internally for getobjects)","title":"is_protosmasher_caller"},{"location":"ProtoSmasher/base-environment/#is_protosmasher_closure","text":"boolean is_protosmasher_closure ( function f ) Returns a boolean based on whether or not the function was created by ProtoSmasher.","title":"is_protosmasher_closure"},{"location":"ProtoSmasher/base-environment/#getobjects","text":"Array < Object > getobjects ( Object < DataModel > dataModel , string ContentString ) Internal function used by ProtoSmasher for DataModel::GetObjects.","title":"getobjects"},{"location":"ProtoSmasher/base-environment/#get_nil_instances","text":"table < Object > get_nil_instances ( < none > ) Returns all nil parented instances from the localscript state.","title":"get_nil_instances"},{"location":"ProtoSmasher/base-environment/#get_thread_context","text":"int get_thread_context ( < none > ) Returns the current context of the caller.","title":"get_thread_context"},{"location":"ProtoSmasher/base-environment/#dump_function","text":"string dump_function ( function f ) Returns the regular lua bytecode of the given function.","title":"dump_function"},{"location":"ProtoSmasher/base-environment/#get_script_function","text":"function get_script_function ( Object < ModuleScript , LocalScript > script ) Returns a function of the script (cannot be called but can be passed to dump_function).","title":"get_script_function"},{"location":"ProtoSmasher/base-environment/#bytecode_to_lua","text":"string bytecode_to_lua ( string byteCode ) Used to convert lua 5.1 bytecode into lua sourcecode (requires unluac.jar in workspace and java be installed)","title":"bytecode_to_lua"},{"location":"ProtoSmasher/base-environment/#writefile","text":"void writefile ( string filePath , string contentsToWrite , boolean isBinary = false ) Writes the contents of \"contentsToWrite\" to the provided file (sandboxed to workspace).","title":"writefile"},{"location":"ProtoSmasher/base-environment/#readfile","text":"string readfile ( string pathToFile ) Returns the files contents (sandboxed to workspace).","title":"readfile"},{"location":"ProtoSmasher/base-environment/#decompile","text":"string decompile ( variant < Object , function > obj , string optionalArg = nil ) Returns the decompiled source code of a script or function. (if you want bytecode put optionalArg as \"dumponly\")","title":"decompile"},{"location":"ProtoSmasher/base-environment/#setclipboard","text":"void setclipboard ( string strToCopy ) Sets the clipboard text to the contents of strToCopy","title":"setclipboard"},{"location":"ProtoSmasher/base-environment/#pebc_create","text":"string pebc_create ( function toEncrypt ) Returns ProtoSmasher Encrypted Bytecode (TM) of the given function (can only be used by people i select, otherwise it will just throw an error.)","title":"pebc_create"},{"location":"ProtoSmasher/base-environment/#pebc_load","text":"function pebc_load ( string pebc ) Loads ProtoSmasher Encrypted Bytecode (TM) and returns it in a function form.","title":"pebc_load"},{"location":"ProtoSmasher/base-environment/#saveinstance","text":"void saveinstance ( Object instanceToSave , string fileName , bool enableScriptDecompiling ) Converts the given instance into roblox's xml instance format and saves it to the saved under the given file name. When enableScriptDecompiling is enabled it will automatically decompile any modulescript or localscript it encounters.","title":"saveinstance"},{"location":"ProtoSmasher/base-environment/#disconnect_all","text":"void disconnect_all ( RBXScriptSignal signal ) Disconnects all connections from a given signal. (should note this might not work for events on datamodel, same for get_signal_connections)","title":"disconnect_all"},{"location":"ProtoSmasher/base-environment/#unlock_modulescript","text":"void unlock_modulescript ( Object < ModuleScript > signal ) Unlocks a given ModuleScript so it can be required via ProtoSmasher (Used by require now)","title":"unlock_modulescript"},{"location":"ProtoSmasher/base-environment/#printoutput","text":"void printoutput ( string text , Color3 color = Color3 ( 1 , 1 , 1 ), bool newLine = true ) Prints the output of ProtoSmasher, with optional formatting.","title":"printoutput"},{"location":"ProtoSmasher/base-environment/#get_renderstep_list","text":"table get_renderstep_list ( < none > ) Return a table of everything thats connected to RenderStep via BindToRenderStepEarly. The table is as following: key 1 is the priority, key 2 is the name, key 3 is the function.","title":"get_renderstep_list"},{"location":"ProtoSmasher/base-environment/#setfflag","text":"bool setfflag ( string flag , string value ) Set's the value of an FFlag and returns whether it was successfully set or not. Click here to view most if not all FFlags for the client.","title":"setfflag"},{"location":"ProtoSmasher/base-environment/#debuggermanager","text":"Object < DebuggerManager > DebuggerManager ( < none > ) Returns the object interface for ROBLOX's script debugger. You can view its documentation here","title":"DebuggerManager"},{"location":"ProtoSmasher/base-environment/#get_calling_script","text":"Object < LocalScript , ModuleScript > get_calling_script ( int level ) Returns the script object from the specificed stack level.","title":"get_calling_script"},{"location":"ProtoSmasher/base-environment/#protect_function","text":"function protect_function ( function f ) Returns a proxy function that will aide in making the function undetectable via stack trace errors. Function must be a ProtoSmasher closure.","title":"protect_function"},{"location":"ProtoSmasher/base-environment/#is_protected_closure","text":"bool is_protected_closure ( function f ) Returns a boolean whether or not the function is protected. Will return false instead of erroring with C closures.","title":"is_protected_closure"},{"location":"ProtoSmasher/base-environment/#get_loaded_modules","text":"table < Object > get_loaded_modules ( < none > ) Returns a table populated with all loaded ModuleScript's in the game. Automatically filters out CoreGui modules.","title":"get_loaded_modules"},{"location":"ProtoSmasher/base-environment/#detour_function","text":"function detour_function ( function f , function detour ) Detour's the given function to the passed detour function, meaning everytime the function is called, your function will be called instead. This replaces the function and therfore does not change the value of tostringing it. A clone of the original function will be returned.","title":"detour_function"},{"location":"ProtoSmasher/base-environment/#parse_url","text":"array < string , string > parse_url ( string url ) Returns a table populated with various information about the passed url. Current information: protocol, domain, port, resource, query","title":"parse_url"},{"location":"ProtoSmasher/base-environment/#get_script_bytecode","text":"string get_script_bytecode ( Object < ModuleScript , LocalScript > script ) Returns the given script's bytecode in regular lua format. This is similar to dump_function combined with get_script_function, but this is more efficient.","title":"get_script_bytecode"},{"location":"ProtoSmasher/base-environment/#get_hidden_gui","text":"Object get_hidden_gui ( < none > ) Returns a Instance you can use parent Gui's to. Anything in here will be undetectable from things like CoreGui checks and such.","title":"get_hidden_gui"},{"location":"ProtoSmasher/base-environment/#get_gc_objects","text":"array < Variant > get_gc_objects ( < none > ) Returns a table containing most of the objects that exist in the current lua state.","title":"get_gc_objects"},{"location":"ProtoSmasher/base-environment/#click_detector","text":"void click_detector ( Object < ClickDetector > detector , float Distance ) Clicks a ClickDetector automatically when called. The distance argument must be less than the MaxActivationDistance property.","title":"click_detector"},{"location":"ProtoSmasher/base-environment/#is_l_closure","text":"bool is_l_closure ( function f ) Returns a boolean that indicates whether or not the function is a Lua Closure or a C Closure.","title":"is_l_closure"},{"location":"ProtoSmasher/base-environment/#compare_c_functions","text":"bool compare_c_functions ( function f1 , function f2 ) Returns a boolean that indicates whether or not the functions internally call the same C function. Will error if either function is not a C closure.","title":"compare_c_functions"},{"location":"ProtoSmasher/base-environment/#appendfile","text":"void appendfile ( string filePath , string contentsToWrite , boolean isBinary = false ) Appends the contents of \"contentsToWrite\" to the end of the provided file (sandboxed to workspace).","title":"appendfile"},{"location":"ProtoSmasher/constants/","text":"Note None of these variables can be changed in the environment PROTOSMASHER_LOADED PROTOSMASHER_LOADED = true MOUSE_CLICK MOUSE_CLICK = 0 MOUSE_DOWN MOUSE_DOWN = 1 MOUSE_UP MOUSE_UP = 2","title":"Constants"},{"location":"ProtoSmasher/constants/#protosmasher_loaded","text":"PROTOSMASHER_LOADED = true","title":"PROTOSMASHER_LOADED"},{"location":"ProtoSmasher/constants/#mouse_click","text":"MOUSE_CLICK = 0","title":"MOUSE_CLICK"},{"location":"ProtoSmasher/constants/#mouse_down","text":"MOUSE_DOWN = 1","title":"MOUSE_DOWN"},{"location":"ProtoSmasher/constants/#mouse_up","text":"MOUSE_UP = 2","title":"MOUSE_UP"},{"location":"ProtoSmasher/Libraries/aes/","text":"AES AES.GenerateIV string AES . GenerateIV ( < none > ) Returns a randomly generated 16 character string that can be used as an IV for encryption. AES.Encrypt string AES . Encrypt ( string Secret , string Key , string IV = \"n@*fjakAnf983jF\" ) Returns the secret \"message\" encrypted via AES-128, AES-192, and AES-256. AES mode is dependent on key length. Key length of 16 will use AES-128, length of 24 will use AES-192, and length of 32 will use AES-256. Only those key lengths are accepted. AES.Decrypt string AES . Decrypt ( string Secret , string Key , string IV = \"n@*fjakAnf983jF\" ) Returns the encrypted secret in a decrypted form. Follows the same rules as encrypt (see above).","title":"AES"},{"location":"ProtoSmasher/Libraries/aes/#aes","text":"","title":"AES"},{"location":"ProtoSmasher/Libraries/aes/#aesgenerateiv","text":"string AES . GenerateIV ( < none > ) Returns a randomly generated 16 character string that can be used as an IV for encryption.","title":"AES.GenerateIV"},{"location":"ProtoSmasher/Libraries/aes/#aesencrypt","text":"string AES . Encrypt ( string Secret , string Key , string IV = \"n@*fjakAnf983jF\" ) Returns the secret \"message\" encrypted via AES-128, AES-192, and AES-256. AES mode is dependent on key length. Key length of 16 will use AES-128, length of 24 will use AES-192, and length of 32 will use AES-256. Only those key lengths are accepted.","title":"AES.Encrypt"},{"location":"ProtoSmasher/Libraries/aes/#aesdecrypt","text":"string AES . Decrypt ( string Secret , string Key , string IV = \"n@*fjakAnf983jF\" ) Returns the encrypted secret in a decrypted form. Follows the same rules as encrypt (see above).","title":"AES.Decrypt"},{"location":"ProtoSmasher/Libraries/base64/","text":"Base64 Base64.Encode string Base64 . Encode ( string Input ) Returns the base64 encoded version of Input. Base64.Decode string Base64 . Decode ( string Input ) Returns the base64 decoded version of Input.","title":"Base64"},{"location":"ProtoSmasher/Libraries/base64/#base64","text":"","title":"Base64"},{"location":"ProtoSmasher/Libraries/base64/#base64encode","text":"string Base64 . Encode ( string Input ) Returns the base64 encoded version of Input.","title":"Base64.Encode"},{"location":"ProtoSmasher/Libraries/base64/#base64decode","text":"string Base64 . Decode ( string Input ) Returns the base64 decoded version of Input.","title":"Base64.Decode"},{"location":"ProtoSmasher/Libraries/bit/","text":"Bit bit.tobit int bit . tobit ( int num ) Returns the input as a bit number? (in my testing it just returns the number without a decimal) bit.bnot int bit . bnot ( int num ) Performs a bit negate on the input. bit.band int bit . band ( int n1 , int n2 ) Performs a bit and operation on the given inputs. bit.bor int bit . bor ( int n1 , int n2 ) Performs a bit or operation on the given inputs. bit.bxor int bit . bxor ( int n1 , int n2 ) Performs a bit xor operation on the given inputs. bit.lshift int bit . lshift ( int num , int ShiftAmount ) Shifts the input left by the given amount. bit.rshift int bit . rshift ( int num , int ShiftAmount ) Shifts the input right by the given amount. bit.arshift int bit . arshift ( int num , int ShiftAmount ) Performs a arithmetic right shift on the given input by the given amount. bit.rol int bit . rol ( int num , int ShiftAmount ) Circular shifts the input left by the given amount. bit.ror int bit . ror ( int num , int ShiftAmount ) Circular shifts the input right by the given amount. bit.bswap int bit . bswap ( int num ) Performs a byte swap on the given input. (basically reverses the bits). bit.tohex string bit . tohex ( int num ) Returns the input as a hexadecimal string.","title":"Bit"},{"location":"ProtoSmasher/Libraries/bit/#bit","text":"","title":"Bit"},{"location":"ProtoSmasher/Libraries/bit/#bittobit","text":"int bit . tobit ( int num ) Returns the input as a bit number? (in my testing it just returns the number without a decimal)","title":"bit.tobit"},{"location":"ProtoSmasher/Libraries/bit/#bitbnot","text":"int bit . bnot ( int num ) Performs a bit negate on the input.","title":"bit.bnot"},{"location":"ProtoSmasher/Libraries/bit/#bitband","text":"int bit . band ( int n1 , int n2 ) Performs a bit and operation on the given inputs.","title":"bit.band"},{"location":"ProtoSmasher/Libraries/bit/#bitbor","text":"int bit . bor ( int n1 , int n2 ) Performs a bit or operation on the given inputs.","title":"bit.bor"},{"location":"ProtoSmasher/Libraries/bit/#bitbxor","text":"int bit . bxor ( int n1 , int n2 ) Performs a bit xor operation on the given inputs.","title":"bit.bxor"},{"location":"ProtoSmasher/Libraries/bit/#bitlshift","text":"int bit . lshift ( int num , int ShiftAmount ) Shifts the input left by the given amount.","title":"bit.lshift"},{"location":"ProtoSmasher/Libraries/bit/#bitrshift","text":"int bit . rshift ( int num , int ShiftAmount ) Shifts the input right by the given amount.","title":"bit.rshift"},{"location":"ProtoSmasher/Libraries/bit/#bitarshift","text":"int bit . arshift ( int num , int ShiftAmount ) Performs a arithmetic right shift on the given input by the given amount.","title":"bit.arshift"},{"location":"ProtoSmasher/Libraries/bit/#bitrol","text":"int bit . rol ( int num , int ShiftAmount ) Circular shifts the input left by the given amount.","title":"bit.rol"},{"location":"ProtoSmasher/Libraries/bit/#bitror","text":"int bit . ror ( int num , int ShiftAmount ) Circular shifts the input right by the given amount.","title":"bit.ror"},{"location":"ProtoSmasher/Libraries/bit/#bitbswap","text":"int bit . bswap ( int num ) Performs a byte swap on the given input. (basically reverses the bits).","title":"bit.bswap"},{"location":"ProtoSmasher/Libraries/bit/#bittohex","text":"string bit . tohex ( int num ) Returns the input as a hexadecimal string.","title":"bit.tohex"},{"location":"ProtoSmasher/Libraries/debug/","text":"Debug debug.getregistry table debug.getregistry ( < none > ) Returns the registry table. debug.setmetatable void debug.setmetatable ( Variant object , table mt ) Sets the metatable for the given object to the given table. (mt can be nil) debug.getfenv table debug . getfenv ( Variant object ) debug.setfenv Variant debug . setfenv ( Variant object , table env ) Sets the environment of the given object, returns object. debug.getmetatable table debug.getmetatable ( Variant object ) Returns the metatable of given object. (functions exactly like getrawmetatable) debug.getupvalue variant debug.getupvalue ( Variant < int , function > container , string upvalName ) Returns the value of a upvalue from the selected container based on the name. debug.getupvalues table < variant > debug . getupvalues ( Variant < int , function > container ) Returns a table of all upvalues from the selected container. debug.setupvalue variant debug.setupvalue ( Variant < int , function > container , string upvalName , Variant value ) Sets the value of the upvalue from the selected container based on the name. Returns boolean based on whether the upvalue was set successfully or not. debug.getconstants table < variant > debug . getconstants ( Variant < int , function > f ) Return's the constants of the given function. Function must be a lua function. debug.setconstant void debug . setconstant ( function f , int index , variant val ) Set's the constant at the given index for the given function. Index's are 1-based. Function must be a lua function. debug.upvalueid userdata debug.upvalueid ( function f , int n ) Returns an unique identifier (as a light userdata) for the upvalue numbered n from the given function. These unique identifiers allow a program to check whether different closures share upvalues. Lua closures that share an upvalue (that is, that access a same external local variable) will return identical ids for those upvalue indices. debug.upvaluejoin void debug.upvaluejoin ( function f1 , int n1 , function f2 , int n2 ) Make the n1-th upvalue of the Lua closure f1 refer to the n2-th upvalue of the Lua closure f2. debug.upvaluename string debug . upvaluename ( function f , int n ) Returns the name for the upvalue numbered n from the given function. Will return an empty string on C closures.","title":"Debug"},{"location":"ProtoSmasher/Libraries/debug/#debug","text":"","title":"Debug"},{"location":"ProtoSmasher/Libraries/debug/#debuggetregistry","text":"table debug.getregistry ( < none > ) Returns the registry table.","title":"debug.getregistry"},{"location":"ProtoSmasher/Libraries/debug/#debugsetmetatable","text":"void debug.setmetatable ( Variant object , table mt ) Sets the metatable for the given object to the given table. (mt can be nil)","title":"debug.setmetatable"},{"location":"ProtoSmasher/Libraries/debug/#debuggetfenv","text":"table debug . getfenv ( Variant object )","title":"debug.getfenv"},{"location":"ProtoSmasher/Libraries/debug/#debugsetfenv","text":"Variant debug . setfenv ( Variant object , table env ) Sets the environment of the given object, returns object.","title":"debug.setfenv"},{"location":"ProtoSmasher/Libraries/debug/#debuggetmetatable","text":"table debug.getmetatable ( Variant object ) Returns the metatable of given object. (functions exactly like getrawmetatable)","title":"debug.getmetatable"},{"location":"ProtoSmasher/Libraries/debug/#debuggetupvalue","text":"variant debug.getupvalue ( Variant < int , function > container , string upvalName ) Returns the value of a upvalue from the selected container based on the name.","title":"debug.getupvalue"},{"location":"ProtoSmasher/Libraries/debug/#debuggetupvalues","text":"table < variant > debug . getupvalues ( Variant < int , function > container ) Returns a table of all upvalues from the selected container.","title":"debug.getupvalues"},{"location":"ProtoSmasher/Libraries/debug/#debugsetupvalue","text":"variant debug.setupvalue ( Variant < int , function > container , string upvalName , Variant value ) Sets the value of the upvalue from the selected container based on the name. Returns boolean based on whether the upvalue was set successfully or not.","title":"debug.setupvalue"},{"location":"ProtoSmasher/Libraries/debug/#debuggetconstants","text":"table < variant > debug . getconstants ( Variant < int , function > f ) Return's the constants of the given function. Function must be a lua function.","title":"debug.getconstants"},{"location":"ProtoSmasher/Libraries/debug/#debugsetconstant","text":"void debug . setconstant ( function f , int index , variant val ) Set's the constant at the given index for the given function. Index's are 1-based. Function must be a lua function.","title":"debug.setconstant"},{"location":"ProtoSmasher/Libraries/debug/#debugupvalueid","text":"userdata debug.upvalueid ( function f , int n ) Returns an unique identifier (as a light userdata) for the upvalue numbered n from the given function. These unique identifiers allow a program to check whether different closures share upvalues. Lua closures that share an upvalue (that is, that access a same external local variable) will return identical ids for those upvalue indices.","title":"debug.upvalueid"},{"location":"ProtoSmasher/Libraries/debug/#debugupvaluejoin","text":"void debug.upvaluejoin ( function f1 , int n1 , function f2 , int n2 ) Make the n1-th upvalue of the Lua closure f1 refer to the n2-th upvalue of the Lua closure f2.","title":"debug.upvaluejoin"},{"location":"ProtoSmasher/Libraries/debug/#debugupvaluename","text":"string debug . upvaluename ( function f , int n ) Returns the name for the upvalue numbered n from the given function. Will return an empty string on C closures.","title":"debug.upvaluename"},{"location":"ProtoSmasher/Libraries/drawing/","text":"Drawing Drawing.new variant Drawing . new ( string Class ) Creates a new DrawObject based on the given class name and returns it. Classes Base bool Visible int ZIndex void Remove() Note every class inherits functions and properties from this class. Line Vector2 From Vector2 To Color3 Color float Thickness float Transparency Text string Text Vector2 Position float Size Color3 Color bool Center bool Outline float Transparency Vector2 TextBounds [readonly] Square Vector2 Position Vector2 Size Color3 Color float Thickness bool Filled float Transparency Circle Vector2 Position float Radius Color3 Color float Thickness bool Filled float Transparency int NumSides Triangle Vector2 PointA Vector2 PointB Vector2 PointC Color3 Color float Thickness bool Filled float Transparency Image string Uri Vector2 Position Vector2 Size [readonly] bool Loaded float Transparency float ScaleFactor (this will update the Size property to reflect the scaled size)","title":"Drawing"},{"location":"ProtoSmasher/Libraries/drawing/#drawing","text":"","title":"Drawing"},{"location":"ProtoSmasher/Libraries/drawing/#drawingnew","text":"variant Drawing . new ( string Class ) Creates a new DrawObject based on the given class name and returns it.","title":"Drawing.new"},{"location":"ProtoSmasher/Libraries/drawing/#classes","text":"","title":"Classes"},{"location":"ProtoSmasher/Libraries/drawing/#base","text":"bool Visible int ZIndex void Remove() Note every class inherits functions and properties from this class.","title":"Base"},{"location":"ProtoSmasher/Libraries/drawing/#line","text":"Vector2 From Vector2 To Color3 Color float Thickness float Transparency","title":"Line"},{"location":"ProtoSmasher/Libraries/drawing/#text","text":"string Text Vector2 Position float Size Color3 Color bool Center bool Outline float Transparency Vector2 TextBounds [readonly]","title":"Text"},{"location":"ProtoSmasher/Libraries/drawing/#square","text":"Vector2 Position Vector2 Size Color3 Color float Thickness bool Filled float Transparency","title":"Square"},{"location":"ProtoSmasher/Libraries/drawing/#circle","text":"Vector2 Position float Radius Color3 Color float Thickness bool Filled float Transparency int NumSides","title":"Circle"},{"location":"ProtoSmasher/Libraries/drawing/#triangle","text":"Vector2 PointA Vector2 PointB Vector2 PointC Color3 Color float Thickness bool Filled float Transparency","title":"Triangle"},{"location":"ProtoSmasher/Libraries/drawing/#image","text":"string Uri Vector2 Position Vector2 Size [readonly] bool Loaded float Transparency float ScaleFactor (this will update the Size property to reflect the scaled size)","title":"Image"},{"location":"ProtoSmasher/Libraries/hash/","text":"Hash MD5 string Hash . Md5 ( string input ) THIS IS CONSIDED AN UNSAFE ALGORITHM Returns the given string hashed using the Md5 algorithm. Tiger string Hash . Tiger ( string input ) Returns the given string hashed using the Tiger algorithm. SHA1 string Hash . Sha1 ( string input ) THIS IS CONSIDED AN UNSAFE ALGORITHM Returns the given string hashed using the Sha1 algorithm. SHA224 string Hash . Sha224 ( string input ) Returns the given string hashed using the Sha-224 algorithm. SHA256 string Hash . Sha256 ( string input ) Returns the given string hashed using the Sha-256 algorithm. SHA384 string Hash . Sha384 ( string input ) Returns the given string hashed using the Sha-384 algorithm. SHA512 string Hash . Sha512 ( string input ) Returns the given string hashed using the Sha-512 algorithm. SHA3_224 string Hash . Sha3_224 ( string input ) Returns the given string hashed using the Sha3-224 algorithm. (Sha3 is also known as Keccak). SHA3_256 string Hash . Sha3_256 ( string input ) Returns the given string hashed using the Sha3-256 algorithm. (Sha3 is also known as Keccak). SHA3_384 string Hash . Sha3_384 ( string input ) Returns the given string hashed using the Sha3-384 algorithm. (Sha3 is also known as Keccak). SHA3_512 string Hash . Sha3_512 ( string input ) Returns the given string hashed using the Sha3-512 algorithm. (Sha3 is also known as Keccak).","title":"Hash"},{"location":"ProtoSmasher/Libraries/hash/#hash","text":"","title":"Hash"},{"location":"ProtoSmasher/Libraries/hash/#md5","text":"string Hash . Md5 ( string input ) THIS IS CONSIDED AN UNSAFE ALGORITHM Returns the given string hashed using the Md5 algorithm.","title":"MD5"},{"location":"ProtoSmasher/Libraries/hash/#tiger","text":"string Hash . Tiger ( string input ) Returns the given string hashed using the Tiger algorithm.","title":"Tiger"},{"location":"ProtoSmasher/Libraries/hash/#sha1","text":"string Hash . Sha1 ( string input ) THIS IS CONSIDED AN UNSAFE ALGORITHM Returns the given string hashed using the Sha1 algorithm.","title":"SHA1"},{"location":"ProtoSmasher/Libraries/hash/#sha224","text":"string Hash . Sha224 ( string input ) Returns the given string hashed using the Sha-224 algorithm.","title":"SHA224"},{"location":"ProtoSmasher/Libraries/hash/#sha256","text":"string Hash . Sha256 ( string input ) Returns the given string hashed using the Sha-256 algorithm.","title":"SHA256"},{"location":"ProtoSmasher/Libraries/hash/#sha384","text":"string Hash . Sha384 ( string input ) Returns the given string hashed using the Sha-384 algorithm.","title":"SHA384"},{"location":"ProtoSmasher/Libraries/hash/#sha512","text":"string Hash . Sha512 ( string input ) Returns the given string hashed using the Sha-512 algorithm.","title":"SHA512"},{"location":"ProtoSmasher/Libraries/hash/#sha3_224","text":"string Hash . Sha3_224 ( string input ) Returns the given string hashed using the Sha3-224 algorithm. (Sha3 is also known as Keccak).","title":"SHA3_224"},{"location":"ProtoSmasher/Libraries/hash/#sha3_256","text":"string Hash . Sha3_256 ( string input ) Returns the given string hashed using the Sha3-256 algorithm. (Sha3 is also known as Keccak).","title":"SHA3_256"},{"location":"ProtoSmasher/Libraries/hash/#sha3_384","text":"string Hash . Sha3_384 ( string input ) Returns the given string hashed using the Sha3-384 algorithm. (Sha3 is also known as Keccak).","title":"SHA3_384"},{"location":"ProtoSmasher/Libraries/hash/#sha3_512","text":"string Hash . Sha3_512 ( string input ) Returns the given string hashed using the Sha3-512 algorithm. (Sha3 is also known as Keccak).","title":"SHA3_512"},{"location":"ProtoSmasher/Libraries/input/","text":"Input Input.LeftClick void Input . LeftClick ( int Action ) Defaults to MOUSE_CLICK if no Action is provided Performs a left click of the mouse when called. Use MOUSE_DOWN or MOUSE_UP as Action to do something other than a click. Input.LeftClick void Input . LeftClick ( int Action ) Defaults to MOUSE_CLICK if no Action is provided Performs a right click of the mouse when called. Use MOUSE_DOWN or MOUSE_UP as Action to do something other than a click. Input.MoveMouse void Input . MoveMouse ( int x , int y ) Moves the mouse from its current position by the given amounts. Input.ScrollMouse void Input . ScrollMouse ( int ScrollAmount ) The amount is negative for up, positive for down. Scrolls the mouse by the given amount. Input.KeyPress void Input . KeyPress ( int VirtualKeyCode ) Performs a key press of the given key when called. Key codes can be found here. Input.KeyDown void Input . KeyDown ( int VirtualKeyCode ) \"Holds\" a key down when called. Key codes can be found here. Input.KeyUp void Input . KeyUp ( int VirtualKeyCode ) \"Releases\" a key when called. Key codes can be found here.","title":"Input"},{"location":"ProtoSmasher/Libraries/input/#input","text":"","title":"Input"},{"location":"ProtoSmasher/Libraries/input/#inputleftclick","text":"void Input . LeftClick ( int Action ) Defaults to MOUSE_CLICK if no Action is provided Performs a left click of the mouse when called. Use MOUSE_DOWN or MOUSE_UP as Action to do something other than a click.","title":"Input.LeftClick"},{"location":"ProtoSmasher/Libraries/input/#inputleftclick_1","text":"void Input . LeftClick ( int Action ) Defaults to MOUSE_CLICK if no Action is provided Performs a right click of the mouse when called. Use MOUSE_DOWN or MOUSE_UP as Action to do something other than a click.","title":"Input.LeftClick"},{"location":"ProtoSmasher/Libraries/input/#inputmovemouse","text":"void Input . MoveMouse ( int x , int y ) Moves the mouse from its current position by the given amounts.","title":"Input.MoveMouse"},{"location":"ProtoSmasher/Libraries/input/#inputscrollmouse","text":"void Input . ScrollMouse ( int ScrollAmount ) The amount is negative for up, positive for down. Scrolls the mouse by the given amount.","title":"Input.ScrollMouse"},{"location":"ProtoSmasher/Libraries/input/#inputkeypress","text":"void Input . KeyPress ( int VirtualKeyCode ) Performs a key press of the given key when called. Key codes can be found here.","title":"Input.KeyPress"},{"location":"ProtoSmasher/Libraries/input/#inputkeydown","text":"void Input . KeyDown ( int VirtualKeyCode ) \"Holds\" a key down when called. Key codes can be found here.","title":"Input.KeyDown"},{"location":"ProtoSmasher/Libraries/input/#inputkeyup","text":"void Input . KeyUp ( int VirtualKeyCode ) \"Releases\" a key when called. Key codes can be found here.","title":"Input.KeyUp"},{"location":"ProtoSmasher/Libraries/websocket/","text":"WebSocket Initializing variant WebSocket . new ( string Address ) Creates a new WebSocket object pointing at the given address and returns it. (websocket ssl is currently not supported, and will crash upon attempt to use) Class Methods Socket.ConnectToServer ConnectToServer () Connects to the server specified when making the websocket object. Socket.Send Send ( str Message ) Sends the message to the websocket server. Socket.Close Close ( int code , str Reason ) Closes the websocket connection with the code and reason specified. Callback Functions Socket.OnMessage OnMessage ( string Data ) [ writeonly ] Socket.OnConnect OnConnect () [ writeonly ] Socket.OnClose OnClose ( int Code , string Reason ) [ writeonly ] Socket.OnFail OnFail ( string Reason ) [ writeonly ] Example local ws = WebSocket . new ( \"ws://echo.websocket.org\" ) ws . OnMessage = function ( Data ) print ( \"received\" , Data ) end ws . OnConnect = function () print ( \"connected\" ) ws : Send ( \"ProtoSmasher rocks!\" ) end ws . OnClose = function ( Code , Reason ) print ( \"closed, code:\" , Code , \"reason:\" , Reason ) end ws . OnFail = function ( Reason ) print ( \"failed to connect, reason:\" , Reason ) end ws : ConnectToServer () wait ( 2 ) ws : Close ( 1000 , \"normal close\" ) Expected Output for the above example:","title":"WebSocket"},{"location":"ProtoSmasher/Libraries/websocket/#websocket","text":"","title":"WebSocket"},{"location":"ProtoSmasher/Libraries/websocket/#initializing","text":"variant WebSocket . new ( string Address ) Creates a new WebSocket object pointing at the given address and returns it. (websocket ssl is currently not supported, and will crash upon attempt to use)","title":"Initializing"},{"location":"ProtoSmasher/Libraries/websocket/#class-methods","text":"","title":"Class Methods"},{"location":"ProtoSmasher/Libraries/websocket/#socketconnecttoserver","text":"ConnectToServer () Connects to the server specified when making the websocket object.","title":"Socket.ConnectToServer"},{"location":"ProtoSmasher/Libraries/websocket/#socketsend","text":"Send ( str Message ) Sends the message to the websocket server.","title":"Socket.Send"},{"location":"ProtoSmasher/Libraries/websocket/#socketclose","text":"Close ( int code , str Reason ) Closes the websocket connection with the code and reason specified.","title":"Socket.Close"},{"location":"ProtoSmasher/Libraries/websocket/#callback-functions","text":"","title":"Callback Functions"},{"location":"ProtoSmasher/Libraries/websocket/#socketonmessage","text":"OnMessage ( string Data ) [ writeonly ]","title":"Socket.OnMessage"},{"location":"ProtoSmasher/Libraries/websocket/#socketonconnect","text":"OnConnect () [ writeonly ]","title":"Socket.OnConnect"},{"location":"ProtoSmasher/Libraries/websocket/#socketonclose","text":"OnClose ( int Code , string Reason ) [ writeonly ]","title":"Socket.OnClose"},{"location":"ProtoSmasher/Libraries/websocket/#socketonfail","text":"OnFail ( string Reason ) [ writeonly ]","title":"Socket.OnFail"},{"location":"ProtoSmasher/Libraries/websocket/#example","text":"local ws = WebSocket . new ( \"ws://echo.websocket.org\" ) ws . OnMessage = function ( Data ) print ( \"received\" , Data ) end ws . OnConnect = function () print ( \"connected\" ) ws : Send ( \"ProtoSmasher rocks!\" ) end ws . OnClose = function ( Code , Reason ) print ( \"closed, code:\" , Code , \"reason:\" , Reason ) end ws . OnFail = function ( Reason ) print ( \"failed to connect, reason:\" , Reason ) end ws : ConnectToServer () wait ( 2 ) ws : Close ( 1000 , \"normal close\" ) Expected Output for the above example:","title":"Example"},{"location":"Synapse X/base-environment/","text":"Base Environment hookfunction hookfunction ( < function > old , < function > hook ) Hooks function 'old', replacing it with the function 'hook'. The old function is returned, you must use it to call the function further. getgenv getgenv ( < void > ) Returns the environment that will be applied to each script ran by Synapse. keyrelease keyrelease ( < int > key ) Releases 'key' on the keyboard. You can access the int key values on MSDN. setclipboard setclipboard ( < string > value ) Sets 'value' to the clipboard. mouse2press mouse2press ( < void > ) Clicks down on the right mouse button. getsenv getsenv ( < LocalScript , ModuleScript > Script ) Returns the environment of Script. Returns nil if the script is not running. checkcaller checkcaller ( < void > ) Returns true if the current thread was made by Synapse. Useful for metatable hooks. bit Note This has been deprecated in favor of Roblox's bit32 library, which has the same functionality. bit.bdiv bit . bdiv ( < uint > dividend , < uint > divisor ) Divides 'dividend' by 'divisor', remainder is not returned. bit.badd bit . badd ( < uint > a , < uint > b ) Adds 'a' with 'b', allows overflows (unlike normal Lua). bit.badd bit . bsub ( < uint > a , < uint > b ) Subtracts 'a' with 'b', allows overflows (unlike normal Lua). bit.rshift bit . rshift ( < uint > val , < uint > by ) Does a right shift on 'val' using 'by'. bit.band bit . band ( < uint > val , < uint > by ) Does a logical AND (&) on 'val' using 'by'. bit.bor bit . bor ( < uint > val , < uint > by ) Does a logical OR (|) on 'val' using 'by'. bit.bxor bit . bxor ( < uint > val , < uint > by ) Does a logical XOR (^) on 'val' using 'by'. bit.bnot bit . bnot ( < uint > val ) Does a logical NOT on 'val'. bit.bmul bit . bmul ( < uint > val , < uint > by ) Multiplies 'val' using 'by', allows overflows (unlike normal Lua) bit.bswap bit . bswap ( < uint > val ) Does a bitwise swap on 'val'. bit.tobit bit . tobit ( < uint > val ) Converts 'val' into proper form for bitwise operations. bit.ror bit . ror ( < uint > val , < uint > by ) Rotates right 'val' using 'by'. bit.lshift bit . lshift ( < uint > val , < uint > by ) Does a left shift on 'val' using 'by'. bit.tohex bit . tohex ( < uint > val ) Converts 'val' to a hex string. debug debug.getconstant debug . getconstant ( < function , int > fi , < int > idx ) Returns the constant at index 'idx' in function 'fi' or level 'fi'. debug.profilebegin debug . profilebegin ( < string > label > Opens a microprofiler label. debug.profileend debug . profileend ( < void > ) Closes the top microprofiler label. debug.traceback debug.traceback ( < void > ) Returns a traceback of the current stack as a string. debug.getfenv debug . getfenv ( < T > o ) Returns the environment of object 'o'. debug.getupvalue debug.getupvalue ( < function , int > fi , < string > upval ) Returns the upvalue with name 'upval' in function or level 'fi'. debug.getlocals debug . getlocals ( < int > lvl ) Returns a table containing the upvalues at level 'lvl'. debug.setmetatable debug.setmetatable ( < T > o , < table > mt ) Set the metatable of 'o' to 'mt'. debug.getconstants debug . getconstants ( < function , int > fi ) Retrieve the constants in function 'fi' or at level 'fi'. debug.getupvalues debug . getupvalues ( < function , int > fi ) Retrieve the upvalues in function 'fi' or at level 'fi'. debug.setupvalue debug.setupvalue ( < function , int > fi , < number > indice , < T > value ) Set upvalue at number 'indice' to value 'value' at level or function 'fi'. debug.setupvalue debug . setconstant ( < function , int > fi , < string > consname , < int , bool , nil , string > value ) Set constant 'consname' to tuple 'value' at level or function 'fi'. debug.getregistry debug.getregistry ( < void > ) Returns the lua registry debug.getinfo debug.getinfo ( < function , int > fi , < string > w ) Returns a table of info pertaining to the Lua function 'fi'. debug.getlocal debug.getlocal ( < int > lvl , < number > indice ) Returns the local with number 'indice' in level 'lvl'. debug.getstack table < Variant > debug . getstack ( int stackpos [, int index ]) Returns the stack for the function at level 'stackpos'. Put index for a single value. debug.setstack void debug . setstack ( int stackpos , int index , Variant value ) Sets stack at stackpos with index to value. debug.*proto The new debug.*proto functions are a new useful addition to the debug API that fixes a common problem in scripts: getting inner functions. Note There is not much documentation for these functions, but there are some examples of usage! Example: local wow = \"same\" local function test () local function asd () --we want this function! print ( wow ) wow = wow .. \"a\" print 'hello!' end game : GetService ( \"RunService\" ). RenderStepped : Connect ( asd ) end While we can use getrenv() iteration since \"asd\" is connected as an event, lets say we got the 'test' function another way and we want to get 'asd'. This is a great usecase for the new debug API functions. local test = ... --found via some other method for i , v in pairs ( debug . getprotos ( test )) do print ( i , v ) end --1 function: XXXXXXXX As we can see, we now have the function! There is a catch though - this function is deactivated. We can get the constants (and decompile it once LuaU decompilation is complete), but we cannot call it or get any upvalues. In order to do that, we have to get an activated version of this function instead. Lets try to get an activated version instead. local test = ... --found via some other method --1 is the index of the function we want to get (the first one in this case), and the 'true' specifies to find activated functions. for i , v in pairs ( debug . getproto ( test , 1 , true )) do print ( i , v ) print ( v ()) --We can call it this time... table . foreach ( debug . getupvalues ( v ), warn ) --..and get upvalues! end loadfile loadfile ( < string > path ) Loads in the contents of a file as a chunk and returns it if compilation is successful. Otherwise, if an error has occured during compilation, nil followed by the error message will be returned. loadstring loadstring ( < string > chunk , [ < string > chunkname ]) Loads 'chunk' as a Lua function and returns it if compilation is succesful. Otherwise, if an error has occured during compilation, nil followed by the error message will be returned. writefile writefile ( < string > filepath , < string > contents ) Writes 'contents' to the supplied filepath. mousescroll mousescroll ( < signed int > px ) Scrolls the mouse wheel virtually by 'px' pixels. mouse2click mouse2click ( < void > ) Virtually presses the right mouse button. islclosure islclosure ( < function > f ) Returns true if 'f' is an LClosure mouse1press mouse1press ( < void > ) Simulates a left mouse button press without releasing it. mouse1release mouse1release ( < void > ) Simulates a left mouse button release. keypress keypress ( < int > keycode ) Simulates a key press for the specified keycode mouse2release mouse2release ( < void > ) Simulates a right mouse button release. newcclosure newcclosure ( < function > f ) Pushes a new c closure that invokes function 'f' upon call. Used for metatable hooks. getinstances getinstances ( < void > ) Returns a list of all instances within the game. getnilinstances getnilinstances ( < void > ) Returns a list of all instances parented to nil within the game. readfile readfile ( < string > path ) Reads the contents of the file located at 'path' and returns it. If the file does not exist, it errors. getscripts getscripts ( < void > ) Returns a list of all scripts within the game. getrunningscripts getrunningscripts ( < void > ) Returns a list of all scripts currently running. appendfile appendfile ( < string > path , < string > content ) Appends 'content' to the file contents at 'path'. If the file does not exist, it errors listfiles listfiles ( < string > folder ) Returns a table of files in 'folder'. isfile isfile ( < string > path ) Returns if 'path' is a file or not. isfolder isfolder ( < string > path ) Returns if 'path' is a folder or not. delfolder delfolder ( < string > path ) Deletes 'folder' in the workspace directory. delfile delfile ( < string > path ) Deletes 'file' from the workspace directory. getreg getreg ( < void > ) Returns the Lua registry. getgc getgc ( < void > ) Returns a copy of the Lua GC list. mouse1click mouse1click ( < void > ) Simulates a full left mouse button press. getrawmetatable getrawmetatable ( < T > value ) Retrieve the metatable of value irregardless of value's metatable's __metatable field. Returns nil if it doesn't exist. setreadonly setreadonly ( < table > table , < bool > ro ) Sets table's read-only value to ro isreadonly isreadonly ( < table > table ) Returns table's read-only condition. getrenv getrenv ( < void > ) Returns the global Roblox environment for the LocalScript state. decompile decompile ( < LocalScript , ModuleScript , function > Script , bool Bytecode = false ) Decompiles Script and returns the decompiled script. If the decompilation fails, then the return value will be an error message. dumpstring dumpstring ( < string > Script ) Returns the Roblox formatted bytecode for source string 'Script'. getloadedmodules getloadedmodules ( < void > ) Returns all ModuleScripts loaded in the game. isrbxactive isrbxactive ( < void > ) Returns if the Roblox window is in focus. getcallingscript getcallingscript ( < void > ) Gets the script that is calling this function. getspecialinfo getspecialinfo ( < Instance > obj ) Gets a list of special properties for MeshParts, UnionOperations, and Terrain. messagebox messagebox ( < string > message , < string > title , < int > options ) Makes a MessageBox with 'message', 'title', and 'options' as options. See this article for more information. messageboxasync messageboxasync ( < string > message , < string > title , < int > options ) Makes a MessageBox with 'message', 'title', and 'options' as options. Runs asynchronously. See this article for more information. rconsolename rconsolename ( < string > title ) Sets the currently allocated console title to 'title'. rconsoleinput rconsoleinput ( < void > ) Yields until the user inputs information into ther console. Returns the input the user put in. rconsoleinputasync rconsoleinputasync ( < void > ) Yields until the user inputs information into ther console. Returns the input the user put in. rconsoleprint rconsoleprint ( < string > message ) Prints 'message' into the console. rconsoleinfo rconsoleinfo ( < string > message ) Prints 'message' into the console, with a info text before it. rconsolewarn rconsolewarn ( < string > message ) Prints 'message' into the console, with a warning text before it. rconsoleerr rconsoleerr ( < string > message ) Prints 'message' into the console, with a error text before it. fireclickdetector fireclickdetector ( < ClickDetector > detector , < number , nil > distance ) Fires click detector 'detector' with 'distance'. If a distance is not provided, it will be 0. Note firetouchinterest, getconnections and some other functions are currently broken and will crash when attempting to call them. These functions will hopefully be fixed in the future. getconnections getconnections ( < Signal > obj ) Gets a list of connections to the specified signal. You can then use :Disable and :Enable on the connections to disable/enable them. firetouchinterest firetouchinterest ( < Part > part , < TouchTransmitter > transmitter , < number > toggle ) Fires touch 'transmitter' with 'part'. Use 0 to toggle it being touched, 1 for it not being toggled. saveinstance saveinstance ( < table > t ) Saves the Roblox game into your workspace folder. syn syn.crypt.encrypt syn . crypt . encrypt ( < string > data , < string > key ) Encrypt's data with key. syn.crypt.decrypt syn . crypt . decrypt ( < string > data , < string > key ) Decrypt's data with key. syn.crypt.decrypt syn . crypt . hash ( < string > data ) Hashes data. syn.crypt.base64.encode syn . crypt . base64 . encode ( < string > data ) Encodes data with base64. syn.crypt.base64.encode syn . crypt . base64 . decode ( < string > data ) Decodes data with base64. syn.cache_replace syn . cache_replace ( < Instance > obj , < Instance > t_obj ) Replace obj in the cache with t_obj. syn.invalidate_cache syn . cache_invalidate ( < Instance > obj ) Invalidate obj's cache entry, forcing a recache upon the next lookup. syn.set_thread_identity syn . set_thread_identity ( < int > n ) Sets the current thread identity after a Task Scheduler cycle is performed. (call wait() after invoking this function for the expected results) syn.get_thread_identity syn . get_thread_identity ( < void > ) Returns the current thread identity. syn.write_clipboard syn . write_clipboard ( < string > content ) Writes 'content' to the current Windows clipboard. syn.request table syn . request ( < table > options ) Functions similarly to HttpService:RequestAsync Example: -- Example: local response = syn . request ( { Url = \"http://httpbin.org/post\" , -- This website helps debug HTTP requests Method = \"POST\" , Headers = { [ \"Content-Type\" ] = \"application/json\" -- When sending JSON, set this! }, Body = game : GetService ( \"HttpService\" ): JSONEncode ({ hello = \"world\" }) } ) for i , v in pairs ( response ) do print ( i , v ) if type ( v ) == \"table\" then for i2 , v2 in pairs ( v ) do warn ( i2 , v2 ) end end end syn.queue_on_teleport syn . queue_on_teleport ( < string > script ) Allows you to queue a script for execution after you teleport to a new server. Displays a warning in the developer console if there is a syntax error. Example: syn . queue_on_teleport ( \"print'this will be printed after you TP'\" ) syn.open_web_socket syn . open_web_socket ( < string > name ) Open's the Synapse WebSocket with channel name. This function will not exist if the user did not enable WebSocket support in theme.json.","title":"Base Environment"},{"location":"Synapse X/base-environment/#base-environment","text":"","title":"Base Environment"},{"location":"Synapse X/base-environment/#hookfunction","text":"hookfunction ( < function > old , < function > hook ) Hooks function 'old', replacing it with the function 'hook'. The old function is returned, you must use it to call the function further.","title":"hookfunction"},{"location":"Synapse X/base-environment/#getgenv","text":"getgenv ( < void > ) Returns the environment that will be applied to each script ran by Synapse.","title":"getgenv"},{"location":"Synapse X/base-environment/#keyrelease","text":"keyrelease ( < int > key ) Releases 'key' on the keyboard. You can access the int key values on MSDN.","title":"keyrelease"},{"location":"Synapse X/base-environment/#setclipboard","text":"setclipboard ( < string > value ) Sets 'value' to the clipboard.","title":"setclipboard"},{"location":"Synapse X/base-environment/#mouse2press","text":"mouse2press ( < void > ) Clicks down on the right mouse button.","title":"mouse2press"},{"location":"Synapse X/base-environment/#getsenv","text":"getsenv ( < LocalScript , ModuleScript > Script ) Returns the environment of Script. Returns nil if the script is not running.","title":"getsenv"},{"location":"Synapse X/base-environment/#checkcaller","text":"checkcaller ( < void > ) Returns true if the current thread was made by Synapse. Useful for metatable hooks.","title":"checkcaller"},{"location":"Synapse X/base-environment/#bit","text":"Note This has been deprecated in favor of Roblox's bit32 library, which has the same functionality.","title":"bit"},{"location":"Synapse X/base-environment/#bitbdiv","text":"bit . bdiv ( < uint > dividend , < uint > divisor ) Divides 'dividend' by 'divisor', remainder is not returned.","title":"bit.bdiv"},{"location":"Synapse X/base-environment/#bitbadd","text":"bit . badd ( < uint > a , < uint > b ) Adds 'a' with 'b', allows overflows (unlike normal Lua).","title":"bit.badd"},{"location":"Synapse X/base-environment/#bitbadd_1","text":"bit . bsub ( < uint > a , < uint > b ) Subtracts 'a' with 'b', allows overflows (unlike normal Lua).","title":"bit.badd"},{"location":"Synapse X/base-environment/#bitrshift","text":"bit . rshift ( < uint > val , < uint > by ) Does a right shift on 'val' using 'by'.","title":"bit.rshift"},{"location":"Synapse X/base-environment/#bitband","text":"bit . band ( < uint > val , < uint > by ) Does a logical AND (&) on 'val' using 'by'.","title":"bit.band"},{"location":"Synapse X/base-environment/#bitbor","text":"bit . bor ( < uint > val , < uint > by ) Does a logical OR (|) on 'val' using 'by'.","title":"bit.bor"},{"location":"Synapse X/base-environment/#bitbxor","text":"bit . bxor ( < uint > val , < uint > by ) Does a logical XOR (^) on 'val' using 'by'.","title":"bit.bxor"},{"location":"Synapse X/base-environment/#bitbnot","text":"bit . bnot ( < uint > val ) Does a logical NOT on 'val'.","title":"bit.bnot"},{"location":"Synapse X/base-environment/#bitbmul","text":"bit . bmul ( < uint > val , < uint > by ) Multiplies 'val' using 'by', allows overflows (unlike normal Lua)","title":"bit.bmul"},{"location":"Synapse X/base-environment/#bitbswap","text":"bit . bswap ( < uint > val ) Does a bitwise swap on 'val'.","title":"bit.bswap"},{"location":"Synapse X/base-environment/#bittobit","text":"bit . tobit ( < uint > val ) Converts 'val' into proper form for bitwise operations.","title":"bit.tobit"},{"location":"Synapse X/base-environment/#bitror","text":"bit . ror ( < uint > val , < uint > by ) Rotates right 'val' using 'by'.","title":"bit.ror"},{"location":"Synapse X/base-environment/#bitlshift","text":"bit . lshift ( < uint > val , < uint > by ) Does a left shift on 'val' using 'by'.","title":"bit.lshift"},{"location":"Synapse X/base-environment/#bittohex","text":"bit . tohex ( < uint > val ) Converts 'val' to a hex string.","title":"bit.tohex"},{"location":"Synapse X/base-environment/#debug","text":"","title":"debug"},{"location":"Synapse X/base-environment/#debuggetconstant","text":"debug . getconstant ( < function , int > fi , < int > idx ) Returns the constant at index 'idx' in function 'fi' or level 'fi'.","title":"debug.getconstant"},{"location":"Synapse X/base-environment/#debugprofilebegin","text":"debug . profilebegin ( < string > label > Opens a microprofiler label.","title":"debug.profilebegin"},{"location":"Synapse X/base-environment/#debugprofileend","text":"debug . profileend ( < void > ) Closes the top microprofiler label.","title":"debug.profileend"},{"location":"Synapse X/base-environment/#debugtraceback","text":"debug.traceback ( < void > ) Returns a traceback of the current stack as a string.","title":"debug.traceback"},{"location":"Synapse X/base-environment/#debuggetfenv","text":"debug . getfenv ( < T > o ) Returns the environment of object 'o'.","title":"debug.getfenv"},{"location":"Synapse X/base-environment/#debuggetupvalue","text":"debug.getupvalue ( < function , int > fi , < string > upval ) Returns the upvalue with name 'upval' in function or level 'fi'.","title":"debug.getupvalue"},{"location":"Synapse X/base-environment/#debuggetlocals","text":"debug . getlocals ( < int > lvl ) Returns a table containing the upvalues at level 'lvl'.","title":"debug.getlocals"},{"location":"Synapse X/base-environment/#debugsetmetatable","text":"debug.setmetatable ( < T > o , < table > mt ) Set the metatable of 'o' to 'mt'.","title":"debug.setmetatable"},{"location":"Synapse X/base-environment/#debuggetconstants","text":"debug . getconstants ( < function , int > fi ) Retrieve the constants in function 'fi' or at level 'fi'.","title":"debug.getconstants"},{"location":"Synapse X/base-environment/#debuggetupvalues","text":"debug . getupvalues ( < function , int > fi ) Retrieve the upvalues in function 'fi' or at level 'fi'.","title":"debug.getupvalues"},{"location":"Synapse X/base-environment/#debugsetupvalue","text":"debug.setupvalue ( < function , int > fi , < number > indice , < T > value ) Set upvalue at number 'indice' to value 'value' at level or function 'fi'.","title":"debug.setupvalue"},{"location":"Synapse X/base-environment/#debugsetupvalue_1","text":"debug . setconstant ( < function , int > fi , < string > consname , < int , bool , nil , string > value ) Set constant 'consname' to tuple 'value' at level or function 'fi'.","title":"debug.setupvalue"},{"location":"Synapse X/base-environment/#debuggetregistry","text":"debug.getregistry ( < void > ) Returns the lua registry","title":"debug.getregistry"},{"location":"Synapse X/base-environment/#debuggetinfo","text":"debug.getinfo ( < function , int > fi , < string > w ) Returns a table of info pertaining to the Lua function 'fi'.","title":"debug.getinfo"},{"location":"Synapse X/base-environment/#debuggetlocal","text":"debug.getlocal ( < int > lvl , < number > indice ) Returns the local with number 'indice' in level 'lvl'.","title":"debug.getlocal"},{"location":"Synapse X/base-environment/#debuggetstack","text":"table < Variant > debug . getstack ( int stackpos [, int index ]) Returns the stack for the function at level 'stackpos'. Put index for a single value.","title":"debug.getstack"},{"location":"Synapse X/base-environment/#debugsetstack","text":"void debug . setstack ( int stackpos , int index , Variant value ) Sets stack at stackpos with index to value.","title":"debug.setstack"},{"location":"Synapse X/base-environment/#debug42proto","text":"The new debug.*proto functions are a new useful addition to the debug API that fixes a common problem in scripts: getting inner functions. Note There is not much documentation for these functions, but there are some examples of usage! Example: local wow = \"same\" local function test () local function asd () --we want this function! print ( wow ) wow = wow .. \"a\" print 'hello!' end game : GetService ( \"RunService\" ). RenderStepped : Connect ( asd ) end While we can use getrenv() iteration since \"asd\" is connected as an event, lets say we got the 'test' function another way and we want to get 'asd'. This is a great usecase for the new debug API functions. local test = ... --found via some other method for i , v in pairs ( debug . getprotos ( test )) do print ( i , v ) end --1 function: XXXXXXXX As we can see, we now have the function! There is a catch though - this function is deactivated. We can get the constants (and decompile it once LuaU decompilation is complete), but we cannot call it or get any upvalues. In order to do that, we have to get an activated version of this function instead. Lets try to get an activated version instead. local test = ... --found via some other method --1 is the index of the function we want to get (the first one in this case), and the 'true' specifies to find activated functions. for i , v in pairs ( debug . getproto ( test , 1 , true )) do print ( i , v ) print ( v ()) --We can call it this time... table . foreach ( debug . getupvalues ( v ), warn ) --..and get upvalues! end","title":"debug.*proto"},{"location":"Synapse X/base-environment/#loadfile","text":"loadfile ( < string > path ) Loads in the contents of a file as a chunk and returns it if compilation is successful. Otherwise, if an error has occured during compilation, nil followed by the error message will be returned.","title":"loadfile"},{"location":"Synapse X/base-environment/#loadstring","text":"loadstring ( < string > chunk , [ < string > chunkname ]) Loads 'chunk' as a Lua function and returns it if compilation is succesful. Otherwise, if an error has occured during compilation, nil followed by the error message will be returned.","title":"loadstring"},{"location":"Synapse X/base-environment/#writefile","text":"writefile ( < string > filepath , < string > contents ) Writes 'contents' to the supplied filepath.","title":"writefile"},{"location":"Synapse X/base-environment/#mousescroll","text":"mousescroll ( < signed int > px ) Scrolls the mouse wheel virtually by 'px' pixels.","title":"mousescroll"},{"location":"Synapse X/base-environment/#mouse2click","text":"mouse2click ( < void > ) Virtually presses the right mouse button.","title":"mouse2click"},{"location":"Synapse X/base-environment/#islclosure","text":"islclosure ( < function > f ) Returns true if 'f' is an LClosure","title":"islclosure"},{"location":"Synapse X/base-environment/#mouse1press","text":"mouse1press ( < void > ) Simulates a left mouse button press without releasing it.","title":"mouse1press"},{"location":"Synapse X/base-environment/#mouse1release","text":"mouse1release ( < void > ) Simulates a left mouse button release.","title":"mouse1release"},{"location":"Synapse X/base-environment/#keypress","text":"keypress ( < int > keycode ) Simulates a key press for the specified keycode","title":"keypress"},{"location":"Synapse X/base-environment/#mouse2release","text":"mouse2release ( < void > ) Simulates a right mouse button release.","title":"mouse2release"},{"location":"Synapse X/base-environment/#newcclosure","text":"newcclosure ( < function > f ) Pushes a new c closure that invokes function 'f' upon call. Used for metatable hooks.","title":"newcclosure"},{"location":"Synapse X/base-environment/#getinstances","text":"getinstances ( < void > ) Returns a list of all instances within the game.","title":"getinstances"},{"location":"Synapse X/base-environment/#getnilinstances","text":"getnilinstances ( < void > ) Returns a list of all instances parented to nil within the game.","title":"getnilinstances"},{"location":"Synapse X/base-environment/#readfile","text":"readfile ( < string > path ) Reads the contents of the file located at 'path' and returns it. If the file does not exist, it errors.","title":"readfile"},{"location":"Synapse X/base-environment/#getscripts","text":"getscripts ( < void > ) Returns a list of all scripts within the game.","title":"getscripts"},{"location":"Synapse X/base-environment/#getrunningscripts","text":"getrunningscripts ( < void > ) Returns a list of all scripts currently running.","title":"getrunningscripts"},{"location":"Synapse X/base-environment/#appendfile","text":"appendfile ( < string > path , < string > content ) Appends 'content' to the file contents at 'path'. If the file does not exist, it errors","title":"appendfile"},{"location":"Synapse X/base-environment/#listfiles","text":"listfiles ( < string > folder ) Returns a table of files in 'folder'.","title":"listfiles"},{"location":"Synapse X/base-environment/#isfile","text":"isfile ( < string > path ) Returns if 'path' is a file or not.","title":"isfile"},{"location":"Synapse X/base-environment/#isfolder","text":"isfolder ( < string > path ) Returns if 'path' is a folder or not.","title":"isfolder"},{"location":"Synapse X/base-environment/#delfolder","text":"delfolder ( < string > path ) Deletes 'folder' in the workspace directory.","title":"delfolder"},{"location":"Synapse X/base-environment/#delfile","text":"delfile ( < string > path ) Deletes 'file' from the workspace directory.","title":"delfile"},{"location":"Synapse X/base-environment/#getreg","text":"getreg ( < void > ) Returns the Lua registry.","title":"getreg"},{"location":"Synapse X/base-environment/#getgc","text":"getgc ( < void > ) Returns a copy of the Lua GC list.","title":"getgc"},{"location":"Synapse X/base-environment/#mouse1click","text":"mouse1click ( < void > ) Simulates a full left mouse button press.","title":"mouse1click"},{"location":"Synapse X/base-environment/#getrawmetatable","text":"getrawmetatable ( < T > value ) Retrieve the metatable of value irregardless of value's metatable's __metatable field. Returns nil if it doesn't exist.","title":"getrawmetatable"},{"location":"Synapse X/base-environment/#setreadonly","text":"setreadonly ( < table > table , < bool > ro ) Sets table's read-only value to ro","title":"setreadonly"},{"location":"Synapse X/base-environment/#isreadonly","text":"isreadonly ( < table > table ) Returns table's read-only condition.","title":"isreadonly"},{"location":"Synapse X/base-environment/#getrenv","text":"getrenv ( < void > ) Returns the global Roblox environment for the LocalScript state.","title":"getrenv"},{"location":"Synapse X/base-environment/#decompile","text":"decompile ( < LocalScript , ModuleScript , function > Script , bool Bytecode = false ) Decompiles Script and returns the decompiled script. If the decompilation fails, then the return value will be an error message.","title":"decompile"},{"location":"Synapse X/base-environment/#dumpstring","text":"dumpstring ( < string > Script ) Returns the Roblox formatted bytecode for source string 'Script'.","title":"dumpstring"},{"location":"Synapse X/base-environment/#getloadedmodules","text":"getloadedmodules ( < void > ) Returns all ModuleScripts loaded in the game.","title":"getloadedmodules"},{"location":"Synapse X/base-environment/#isrbxactive","text":"isrbxactive ( < void > ) Returns if the Roblox window is in focus.","title":"isrbxactive"},{"location":"Synapse X/base-environment/#getcallingscript","text":"getcallingscript ( < void > ) Gets the script that is calling this function.","title":"getcallingscript"},{"location":"Synapse X/base-environment/#getspecialinfo","text":"getspecialinfo ( < Instance > obj ) Gets a list of special properties for MeshParts, UnionOperations, and Terrain.","title":"getspecialinfo"},{"location":"Synapse X/base-environment/#messagebox","text":"messagebox ( < string > message , < string > title , < int > options ) Makes a MessageBox with 'message', 'title', and 'options' as options. See this article for more information.","title":"messagebox"},{"location":"Synapse X/base-environment/#messageboxasync","text":"messageboxasync ( < string > message , < string > title , < int > options ) Makes a MessageBox with 'message', 'title', and 'options' as options. Runs asynchronously. See this article for more information.","title":"messageboxasync"},{"location":"Synapse X/base-environment/#rconsolename","text":"rconsolename ( < string > title ) Sets the currently allocated console title to 'title'.","title":"rconsolename"},{"location":"Synapse X/base-environment/#rconsoleinput","text":"rconsoleinput ( < void > ) Yields until the user inputs information into ther console. Returns the input the user put in.","title":"rconsoleinput"},{"location":"Synapse X/base-environment/#rconsoleinputasync","text":"rconsoleinputasync ( < void > ) Yields until the user inputs information into ther console. Returns the input the user put in.","title":"rconsoleinputasync"},{"location":"Synapse X/base-environment/#rconsoleprint","text":"rconsoleprint ( < string > message ) Prints 'message' into the console.","title":"rconsoleprint"},{"location":"Synapse X/base-environment/#rconsoleinfo","text":"rconsoleinfo ( < string > message ) Prints 'message' into the console, with a info text before it.","title":"rconsoleinfo"},{"location":"Synapse X/base-environment/#rconsolewarn","text":"rconsolewarn ( < string > message ) Prints 'message' into the console, with a warning text before it.","title":"rconsolewarn"},{"location":"Synapse X/base-environment/#rconsoleerr","text":"rconsoleerr ( < string > message ) Prints 'message' into the console, with a error text before it.","title":"rconsoleerr"},{"location":"Synapse X/base-environment/#fireclickdetector","text":"fireclickdetector ( < ClickDetector > detector , < number , nil > distance ) Fires click detector 'detector' with 'distance'. If a distance is not provided, it will be 0. Note firetouchinterest, getconnections and some other functions are currently broken and will crash when attempting to call them. These functions will hopefully be fixed in the future.","title":"fireclickdetector"},{"location":"Synapse X/base-environment/#getconnections","text":"getconnections ( < Signal > obj ) Gets a list of connections to the specified signal. You can then use :Disable and :Enable on the connections to disable/enable them.","title":"getconnections"},{"location":"Synapse X/base-environment/#firetouchinterest","text":"firetouchinterest ( < Part > part , < TouchTransmitter > transmitter , < number > toggle ) Fires touch 'transmitter' with 'part'. Use 0 to toggle it being touched, 1 for it not being toggled.","title":"firetouchinterest"},{"location":"Synapse X/base-environment/#saveinstance","text":"saveinstance ( < table > t ) Saves the Roblox game into your workspace folder.","title":"saveinstance"},{"location":"Synapse X/base-environment/#syn","text":"","title":"syn"},{"location":"Synapse X/base-environment/#syncryptencrypt","text":"syn . crypt . encrypt ( < string > data , < string > key ) Encrypt's data with key.","title":"syn.crypt.encrypt"},{"location":"Synapse X/base-environment/#syncryptdecrypt","text":"syn . crypt . decrypt ( < string > data , < string > key ) Decrypt's data with key.","title":"syn.crypt.decrypt"},{"location":"Synapse X/base-environment/#syncryptdecrypt_1","text":"syn . crypt . hash ( < string > data ) Hashes data.","title":"syn.crypt.decrypt"},{"location":"Synapse X/base-environment/#syncryptbase64encode","text":"syn . crypt . base64 . encode ( < string > data ) Encodes data with base64.","title":"syn.crypt.base64.encode"},{"location":"Synapse X/base-environment/#syncryptbase64encode_1","text":"syn . crypt . base64 . decode ( < string > data ) Decodes data with base64.","title":"syn.crypt.base64.encode"},{"location":"Synapse X/base-environment/#syncache_replace","text":"syn . cache_replace ( < Instance > obj , < Instance > t_obj ) Replace obj in the cache with t_obj.","title":"syn.cache_replace"},{"location":"Synapse X/base-environment/#syninvalidate_cache","text":"syn . cache_invalidate ( < Instance > obj ) Invalidate obj's cache entry, forcing a recache upon the next lookup.","title":"syn.invalidate_cache"},{"location":"Synapse X/base-environment/#synset_thread_identity","text":"syn . set_thread_identity ( < int > n ) Sets the current thread identity after a Task Scheduler cycle is performed. (call wait() after invoking this function for the expected results)","title":"syn.set_thread_identity"},{"location":"Synapse X/base-environment/#synget_thread_identity","text":"syn . get_thread_identity ( < void > ) Returns the current thread identity.","title":"syn.get_thread_identity"},{"location":"Synapse X/base-environment/#synwrite_clipboard","text":"syn . write_clipboard ( < string > content ) Writes 'content' to the current Windows clipboard.","title":"syn.write_clipboard"},{"location":"Synapse X/base-environment/#synrequest","text":"table syn . request ( < table > options ) Functions similarly to HttpService:RequestAsync Example: -- Example: local response = syn . request ( { Url = \"http://httpbin.org/post\" , -- This website helps debug HTTP requests Method = \"POST\" , Headers = { [ \"Content-Type\" ] = \"application/json\" -- When sending JSON, set this! }, Body = game : GetService ( \"HttpService\" ): JSONEncode ({ hello = \"world\" }) } ) for i , v in pairs ( response ) do print ( i , v ) if type ( v ) == \"table\" then for i2 , v2 in pairs ( v ) do warn ( i2 , v2 ) end end end","title":"syn.request"},{"location":"Synapse X/base-environment/#synqueue_on_teleport","text":"syn . queue_on_teleport ( < string > script ) Allows you to queue a script for execution after you teleport to a new server. Displays a warning in the developer console if there is a syntax error. Example: syn . queue_on_teleport ( \"print'this will be printed after you TP'\" )","title":"syn.queue_on_teleport"},{"location":"Synapse X/base-environment/#synopen_web_socket","text":"syn . open_web_socket ( < string > name ) Open's the Synapse WebSocket with channel name. This function will not exist if the user did not enable WebSocket support in theme.json.","title":"syn.open_web_socket"}]}